<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RmaProv', 'profit');

/**
 * BaseRmaProv
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $rma_num
 * @property timestamp $fec_emis
 * @property string $status
 * @property string $co_prov
 * @property string $rma_prov
 * @property string $comentario
 * @property string $descrip
 * @property string $co_tran
 * @property string $campo1
 * @property string $campo2
 * @property string $campo3
 * @property string $campo4
 * @property string $campo5
 * @property string $campo6
 * @property string $campo7
 * @property string $campo8
 * @property string $co_us_in
 * @property timestamp $fe_us_in
 * @property string $co_us_mo
 * @property timestamp $fe_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_el
 * @property string $co_sucu
 * @property string $rowguid
 * @property string $transfe
 * @property Prov $Prov
 * @property Transpor $Transpor
 * @property Doctrine_Collection $RengRmp
 * 
 * @method integer             getRmaNum()     Returns the current record's "rma_num" value
 * @method timestamp           getFecEmis()    Returns the current record's "fec_emis" value
 * @method string              getStatus()     Returns the current record's "status" value
 * @method string              getCoProv()     Returns the current record's "co_prov" value
 * @method string              getRmaProv()    Returns the current record's "rma_prov" value
 * @method string              getComentario() Returns the current record's "comentario" value
 * @method string              getDescrip()    Returns the current record's "descrip" value
 * @method string              getCoTran()     Returns the current record's "co_tran" value
 * @method string              getCampo1()     Returns the current record's "campo1" value
 * @method string              getCampo2()     Returns the current record's "campo2" value
 * @method string              getCampo3()     Returns the current record's "campo3" value
 * @method string              getCampo4()     Returns the current record's "campo4" value
 * @method string              getCampo5()     Returns the current record's "campo5" value
 * @method string              getCampo6()     Returns the current record's "campo6" value
 * @method string              getCampo7()     Returns the current record's "campo7" value
 * @method string              getCampo8()     Returns the current record's "campo8" value
 * @method string              getCoUsIn()     Returns the current record's "co_us_in" value
 * @method timestamp           getFeUsIn()     Returns the current record's "fe_us_in" value
 * @method string              getCoUsMo()     Returns the current record's "co_us_mo" value
 * @method timestamp           getFeUsMo()     Returns the current record's "fe_us_mo" value
 * @method string              getCoUsEl()     Returns the current record's "co_us_el" value
 * @method timestamp           getFeUsEl()     Returns the current record's "fe_us_el" value
 * @method string              getCoSucu()     Returns the current record's "co_sucu" value
 * @method string              getRowguid()    Returns the current record's "rowguid" value
 * @method string              getTransfe()    Returns the current record's "transfe" value
 * @method Prov                getProv()       Returns the current record's "Prov" value
 * @method Transpor            getTranspor()   Returns the current record's "Transpor" value
 * @method Doctrine_Collection getRengRmp()    Returns the current record's "RengRmp" collection
 * @method RmaProv             setRmaNum()     Sets the current record's "rma_num" value
 * @method RmaProv             setFecEmis()    Sets the current record's "fec_emis" value
 * @method RmaProv             setStatus()     Sets the current record's "status" value
 * @method RmaProv             setCoProv()     Sets the current record's "co_prov" value
 * @method RmaProv             setRmaProv()    Sets the current record's "rma_prov" value
 * @method RmaProv             setComentario() Sets the current record's "comentario" value
 * @method RmaProv             setDescrip()    Sets the current record's "descrip" value
 * @method RmaProv             setCoTran()     Sets the current record's "co_tran" value
 * @method RmaProv             setCampo1()     Sets the current record's "campo1" value
 * @method RmaProv             setCampo2()     Sets the current record's "campo2" value
 * @method RmaProv             setCampo3()     Sets the current record's "campo3" value
 * @method RmaProv             setCampo4()     Sets the current record's "campo4" value
 * @method RmaProv             setCampo5()     Sets the current record's "campo5" value
 * @method RmaProv             setCampo6()     Sets the current record's "campo6" value
 * @method RmaProv             setCampo7()     Sets the current record's "campo7" value
 * @method RmaProv             setCampo8()     Sets the current record's "campo8" value
 * @method RmaProv             setCoUsIn()     Sets the current record's "co_us_in" value
 * @method RmaProv             setFeUsIn()     Sets the current record's "fe_us_in" value
 * @method RmaProv             setCoUsMo()     Sets the current record's "co_us_mo" value
 * @method RmaProv             setFeUsMo()     Sets the current record's "fe_us_mo" value
 * @method RmaProv             setCoUsEl()     Sets the current record's "co_us_el" value
 * @method RmaProv             setFeUsEl()     Sets the current record's "fe_us_el" value
 * @method RmaProv             setCoSucu()     Sets the current record's "co_sucu" value
 * @method RmaProv             setRowguid()    Sets the current record's "rowguid" value
 * @method RmaProv             setTransfe()    Sets the current record's "transfe" value
 * @method RmaProv             setProv()       Sets the current record's "Prov" value
 * @method RmaProv             setTranspor()   Sets the current record's "Transpor" value
 * @method RmaProv             setRengRmp()    Sets the current record's "RengRmp" collection
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRmaProv extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('rma_prov');
        $this->hasColumn('rma_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fec_emis', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(convert(varchar(10),getdate(),104))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('status', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_prov', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('rma_prov', 'string', 15, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('comentario', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('descrip', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('co_tran', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('campo1', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo2', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo3', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo4', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo5', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo6', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo7', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo8', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_sucu', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('transfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Prov', array(
             'local' => 'co_prov',
             'foreign' => 'co_prov'));

        $this->hasOne('Transpor', array(
             'local' => 'co_tran',
             'foreign' => 'co_tran'));

        $this->hasMany('RengRmp', array(
             'local' => 'rma_num',
             'foreign' => 'rma_num'));
    }
}