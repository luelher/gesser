<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RengEmp', 'profit');

/**
 * BaseRengEmp
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $emp_num
 * @property integer $reng_num
 * @property string $co_art
 * @property decimal $total_art
 * @property decimal $stotal_art
 * @property decimal $prec_vta
 * @property string $unid
 * @property integer $num_blto
 * @property string $nro_lote
 * @property timestamp $fec_lote
 * @property string $rowguid
 * @property string $co_alma
 * @property decimal $cant_orgt
 * @property decimal $cant_orgs
 * @property integer $agrupar
 * @property string $unid_r
 * @property integer $nro_reng
 * @property Empaques $Empaques
 * 
 * @method integer   getEmpNum()     Returns the current record's "emp_num" value
 * @method integer   getRengNum()    Returns the current record's "reng_num" value
 * @method string    getCoArt()      Returns the current record's "co_art" value
 * @method decimal   getTotalArt()   Returns the current record's "total_art" value
 * @method decimal   getStotalArt()  Returns the current record's "stotal_art" value
 * @method decimal   getPrecVta()    Returns the current record's "prec_vta" value
 * @method string    getUnid()       Returns the current record's "unid" value
 * @method integer   getNumBlto()    Returns the current record's "num_blto" value
 * @method string    getNroLote()    Returns the current record's "nro_lote" value
 * @method timestamp getFecLote()    Returns the current record's "fec_lote" value
 * @method string    getRowguid()    Returns the current record's "rowguid" value
 * @method string    getCoAlma()     Returns the current record's "co_alma" value
 * @method decimal   getCantOrgt()   Returns the current record's "cant_orgt" value
 * @method decimal   getCantOrgs()   Returns the current record's "cant_orgs" value
 * @method integer   getAgrupar()    Returns the current record's "agrupar" value
 * @method string    getUnidR()      Returns the current record's "unid_r" value
 * @method integer   getNroReng()    Returns the current record's "nro_reng" value
 * @method Empaques  getEmpaques()   Returns the current record's "Empaques" value
 * @method RengEmp   setEmpNum()     Sets the current record's "emp_num" value
 * @method RengEmp   setRengNum()    Sets the current record's "reng_num" value
 * @method RengEmp   setCoArt()      Sets the current record's "co_art" value
 * @method RengEmp   setTotalArt()   Sets the current record's "total_art" value
 * @method RengEmp   setStotalArt()  Sets the current record's "stotal_art" value
 * @method RengEmp   setPrecVta()    Sets the current record's "prec_vta" value
 * @method RengEmp   setUnid()       Sets the current record's "unid" value
 * @method RengEmp   setNumBlto()    Sets the current record's "num_blto" value
 * @method RengEmp   setNroLote()    Sets the current record's "nro_lote" value
 * @method RengEmp   setFecLote()    Sets the current record's "fec_lote" value
 * @method RengEmp   setRowguid()    Sets the current record's "rowguid" value
 * @method RengEmp   setCoAlma()     Sets the current record's "co_alma" value
 * @method RengEmp   setCantOrgt()   Sets the current record's "cant_orgt" value
 * @method RengEmp   setCantOrgs()   Sets the current record's "cant_orgs" value
 * @method RengEmp   setAgrupar()    Sets the current record's "agrupar" value
 * @method RengEmp   setUnidR()      Sets the current record's "unid_r" value
 * @method RengEmp   setNroReng()    Sets the current record's "nro_reng" value
 * @method RengEmp   setEmpaques()   Sets the current record's "Empaques" value
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRengEmp extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reng_emp');
        $this->hasColumn('emp_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('reng_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('co_art', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('total_art', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('stotal_art', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('prec_vta', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('unid', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('num_blto', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('nro_lote', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('fec_lote', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(getdate())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('co_alma', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('cant_orgt', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('cant_orgs', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('agrupar', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('unid_r', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(6))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('nro_reng', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Empaques', array(
             'local' => 'emp_num',
             'foreign' => 'emp_num'));
    }
}