<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RengExp2', 'profit');

/**
 * BaseRengExp2
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $exp_num
 * @property integer $reng_num
 * @property string $co_art
 * @property string $co_art2
 * @property string $descrip
 * @property string $uni_venta
 * @property float $existencia
 * @property float $total_art
 * @property float $faltante
 * @property float $costo
 * @property float $costo_pro
 * @property float $porllegar
 * @property string $rowguid
 * @property Spexplosion $Spexplosion
 * 
 * @method integer     getExpNum()      Returns the current record's "exp_num" value
 * @method integer     getRengNum()     Returns the current record's "reng_num" value
 * @method string      getCoArt()       Returns the current record's "co_art" value
 * @method string      getCoArt2()      Returns the current record's "co_art2" value
 * @method string      getDescrip()     Returns the current record's "descrip" value
 * @method string      getUniVenta()    Returns the current record's "uni_venta" value
 * @method float       getExistencia()  Returns the current record's "existencia" value
 * @method float       getTotalArt()    Returns the current record's "total_art" value
 * @method float       getFaltante()    Returns the current record's "faltante" value
 * @method float       getCosto()       Returns the current record's "costo" value
 * @method float       getCostoPro()    Returns the current record's "costo_pro" value
 * @method float       getPorllegar()   Returns the current record's "porllegar" value
 * @method string      getRowguid()     Returns the current record's "rowguid" value
 * @method Spexplosion getSpexplosion() Returns the current record's "Spexplosion" value
 * @method RengExp2    setExpNum()      Sets the current record's "exp_num" value
 * @method RengExp2    setRengNum()     Sets the current record's "reng_num" value
 * @method RengExp2    setCoArt()       Sets the current record's "co_art" value
 * @method RengExp2    setCoArt2()      Sets the current record's "co_art2" value
 * @method RengExp2    setDescrip()     Sets the current record's "descrip" value
 * @method RengExp2    setUniVenta()    Sets the current record's "uni_venta" value
 * @method RengExp2    setExistencia()  Sets the current record's "existencia" value
 * @method RengExp2    setTotalArt()    Sets the current record's "total_art" value
 * @method RengExp2    setFaltante()    Sets the current record's "faltante" value
 * @method RengExp2    setCosto()       Sets the current record's "costo" value
 * @method RengExp2    setCostoPro()    Sets the current record's "costo_pro" value
 * @method RengExp2    setPorllegar()   Sets the current record's "porllegar" value
 * @method RengExp2    setRowguid()     Sets the current record's "rowguid" value
 * @method RengExp2    setSpexplosion() Sets the current record's "Spexplosion" value
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRengExp2 extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reng_exp2');
        $this->hasColumn('exp_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('reng_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('co_art', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('co_art2', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('descrip', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('uni_venta', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('existencia', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('total_art', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('faltante', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('costo', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('costo_pro', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('porllegar', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Spexplosion', array(
             'local' => 'exp_num',
             'foreign' => 'exp_num'));
    }
}