<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RengEmb', 'profit');

/**
 * BaseRengEmb
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $exp_num
 * @property integer $reng_num
 * @property integer $tipo_tra
 * @property integer $fact_num
 * @property string $num_doc
 * @property string $emp_tra
 * @property string $veh_nom
 * @property timestamp $fec_etd
 * @property string $lug_emb
 * @property timestamp $fec_eta
 * @property string $cant_con
 * @property decimal $peso_vo
 * @property decimal $peso_to
 * @property decimal $vol_tot
 * @property string $co_uni
 * @property integer $cant_emp
 * @property string $rowguid
 * @property ExpImp $ExpImp
 * @property Unidades $Unidades
 * 
 * @method integer   getExpNum()   Returns the current record's "exp_num" value
 * @method integer   getRengNum()  Returns the current record's "reng_num" value
 * @method integer   getTipoTra()  Returns the current record's "tipo_tra" value
 * @method integer   getFactNum()  Returns the current record's "fact_num" value
 * @method string    getNumDoc()   Returns the current record's "num_doc" value
 * @method string    getEmpTra()   Returns the current record's "emp_tra" value
 * @method string    getVehNom()   Returns the current record's "veh_nom" value
 * @method timestamp getFecEtd()   Returns the current record's "fec_etd" value
 * @method string    getLugEmb()   Returns the current record's "lug_emb" value
 * @method timestamp getFecEta()   Returns the current record's "fec_eta" value
 * @method string    getCantCon()  Returns the current record's "cant_con" value
 * @method decimal   getPesoVo()   Returns the current record's "peso_vo" value
 * @method decimal   getPesoTo()   Returns the current record's "peso_to" value
 * @method decimal   getVolTot()   Returns the current record's "vol_tot" value
 * @method string    getCoUni()    Returns the current record's "co_uni" value
 * @method integer   getCantEmp()  Returns the current record's "cant_emp" value
 * @method string    getRowguid()  Returns the current record's "rowguid" value
 * @method ExpImp    getExpImp()   Returns the current record's "ExpImp" value
 * @method Unidades  getUnidades() Returns the current record's "Unidades" value
 * @method RengEmb   setExpNum()   Sets the current record's "exp_num" value
 * @method RengEmb   setRengNum()  Sets the current record's "reng_num" value
 * @method RengEmb   setTipoTra()  Sets the current record's "tipo_tra" value
 * @method RengEmb   setFactNum()  Sets the current record's "fact_num" value
 * @method RengEmb   setNumDoc()   Sets the current record's "num_doc" value
 * @method RengEmb   setEmpTra()   Sets the current record's "emp_tra" value
 * @method RengEmb   setVehNom()   Sets the current record's "veh_nom" value
 * @method RengEmb   setFecEtd()   Sets the current record's "fec_etd" value
 * @method RengEmb   setLugEmb()   Sets the current record's "lug_emb" value
 * @method RengEmb   setFecEta()   Sets the current record's "fec_eta" value
 * @method RengEmb   setCantCon()  Sets the current record's "cant_con" value
 * @method RengEmb   setPesoVo()   Sets the current record's "peso_vo" value
 * @method RengEmb   setPesoTo()   Sets the current record's "peso_to" value
 * @method RengEmb   setVolTot()   Sets the current record's "vol_tot" value
 * @method RengEmb   setCoUni()    Sets the current record's "co_uni" value
 * @method RengEmb   setCantEmp()  Sets the current record's "cant_emp" value
 * @method RengEmb   setRowguid()  Sets the current record's "rowguid" value
 * @method RengEmb   setExpImp()   Sets the current record's "ExpImp" value
 * @method RengEmb   setUnidades() Sets the current record's "Unidades" value
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRengEmb extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reng_emb');
        $this->hasColumn('exp_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('reng_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('tipo_tra', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fact_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('num_doc', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('emp_tra', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('veh_nom', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('fec_etd', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('lug_emb', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('fec_eta', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('cant_con', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('peso_vo', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('peso_to', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('vol_tot', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('co_uni', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('cant_emp', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('ExpImp', array(
             'local' => 'exp_num',
             'foreign' => 'exp_num'));

        $this->hasOne('Unidades', array(
             'local' => 'co_uni',
             'foreign' => 'co_uni'));
    }
}