<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Ambart', 'profit');

/**
 * BaseAmbart
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $amb_usua
 * @property boolean $co_artv
 * @property boolean $art_desv
 * @property boolean $fecha_regv
 * @property boolean $manj_serv
 * @property boolean $co_lind
 * @property boolean $co_linv
 * @property string $co_lin
 * @property boolean $co_catd
 * @property boolean $co_catv
 * @property string $co_cat
 * @property boolean $co_subld
 * @property boolean $co_sublv
 * @property string $co_subl
 * @property boolean $co_colord
 * @property boolean $co_colorv
 * @property string $co_color
 * @property boolean $itemv
 * @property boolean $refv
 * @property boolean $modelov
 * @property boolean $procedencd
 * @property boolean $procedencv
 * @property string $procedenci
 * @property boolean $comentariv
 * @property boolean $co_provd
 * @property boolean $co_provv
 * @property string $co_prov
 * @property boolean $ubicacionv
 * @property boolean $relac_autd
 * @property boolean $relac_autv
 * @property integer $relac_aut
 * @property boolean $pto_pedidv
 * @property boolean $stock_maxv
 * @property boolean $stock_minv
 * @property boolean $prec_omv
 * @property boolean $prec_vta1v
 * @property boolean $prec_vta2v
 * @property boolean $prec_vta3v
 * @property boolean $prec_vta4v
 * @property boolean $prec_vta5v
 * @property boolean $prec_agr1v
 * @property boolean $prec_agr2v
 * @property boolean $prec_agr3v
 * @property boolean $prec_agr4v
 * @property boolean $prec_agr5v
 * @property boolean $can_agrv
 * @property boolean $marg_minv
 * @property boolean $ult_cos_v
 * @property boolean $cos_pro_v
 * @property boolean $cos_merc_v
 * @property boolean $cos_prov_v
 * @property boolean $ult_cosdov
 * @property boolean $cos_unanv
 * @property boolean $ult_cosomv
 * @property boolean $cos_proomv
 * @property boolean $fec_proomv
 * @property boolean $tipo_cosd
 * @property boolean $tipo_cosv
 * @property string $tipo_cos
 * @property boolean $mont_comiv
 * @property boolean $punt_cliv
 * @property boolean $punt_prov
 * @property boolean $anuladov
 * @property boolean $tipo_impd
 * @property boolean $tipo_impv
 * @property string $tipo_imp
 * @property boolean $licorv
 * @property boolean $picturev
 * @property string $campo1
 * @property string $campo2
 * @property string $campo3
 * @property string $campo4
 * @property string $campo5
 * @property string $campo6
 * @property string $campo7
 * @property string $campo8
 * @property string $co_us_in
 * @property timestamp $fe_us_in
 * @property string $co_us_mo
 * @property timestamp $fe_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_el
 * @property string $revisado
 * @property string $trasnfe
 * @property string $co_sucu
 * @property boolean $pesov
 * @property boolean $piev
 * @property boolean $margen1v
 * @property boolean $margen2v
 * @property boolean $margen3v
 * @property boolean $margen4v
 * @property boolean $margen5v
 * @property boolean $tipod
 * @property boolean $tipov
 * @property string $tipo
 * @property boolean $lotev
 * @property boolean $reactivar
 * @property boolean $relacartv
 * @property boolean $porc_adiv
 * @property boolean $garantiav
 * @property string $rowguid
 * @property boolean $bt_preclote
 * @property boolean $art_desiv
 * @property boolean $imagen1v
 * @property boolean $imagen2v
 * @property boolean $bt_aranc
 * 
 * @method string    getAmbUsua()     Returns the current record's "amb_usua" value
 * @method boolean   getCoArtv()      Returns the current record's "co_artv" value
 * @method boolean   getArtDesv()     Returns the current record's "art_desv" value
 * @method boolean   getFechaRegv()   Returns the current record's "fecha_regv" value
 * @method boolean   getManjServ()    Returns the current record's "manj_serv" value
 * @method boolean   getCoLind()      Returns the current record's "co_lind" value
 * @method boolean   getCoLinv()      Returns the current record's "co_linv" value
 * @method string    getCoLin()       Returns the current record's "co_lin" value
 * @method boolean   getCoCatd()      Returns the current record's "co_catd" value
 * @method boolean   getCoCatv()      Returns the current record's "co_catv" value
 * @method string    getCoCat()       Returns the current record's "co_cat" value
 * @method boolean   getCoSubld()     Returns the current record's "co_subld" value
 * @method boolean   getCoSublv()     Returns the current record's "co_sublv" value
 * @method string    getCoSubl()      Returns the current record's "co_subl" value
 * @method boolean   getCoColord()    Returns the current record's "co_colord" value
 * @method boolean   getCoColorv()    Returns the current record's "co_colorv" value
 * @method string    getCoColor()     Returns the current record's "co_color" value
 * @method boolean   getItemv()       Returns the current record's "itemv" value
 * @method boolean   getRefv()        Returns the current record's "refv" value
 * @method boolean   getModelov()     Returns the current record's "modelov" value
 * @method boolean   getProcedencd()  Returns the current record's "procedencd" value
 * @method boolean   getProcedencv()  Returns the current record's "procedencv" value
 * @method string    getProcedenci()  Returns the current record's "procedenci" value
 * @method boolean   getComentariv()  Returns the current record's "comentariv" value
 * @method boolean   getCoProvd()     Returns the current record's "co_provd" value
 * @method boolean   getCoProvv()     Returns the current record's "co_provv" value
 * @method string    getCoProv()      Returns the current record's "co_prov" value
 * @method boolean   getUbicacionv()  Returns the current record's "ubicacionv" value
 * @method boolean   getRelacAutd()   Returns the current record's "relac_autd" value
 * @method boolean   getRelacAutv()   Returns the current record's "relac_autv" value
 * @method integer   getRelacAut()    Returns the current record's "relac_aut" value
 * @method boolean   getPtoPedidv()   Returns the current record's "pto_pedidv" value
 * @method boolean   getStockMaxv()   Returns the current record's "stock_maxv" value
 * @method boolean   getStockMinv()   Returns the current record's "stock_minv" value
 * @method boolean   getPrecOmv()     Returns the current record's "prec_omv" value
 * @method boolean   getPrecVta1v()   Returns the current record's "prec_vta1v" value
 * @method boolean   getPrecVta2v()   Returns the current record's "prec_vta2v" value
 * @method boolean   getPrecVta3v()   Returns the current record's "prec_vta3v" value
 * @method boolean   getPrecVta4v()   Returns the current record's "prec_vta4v" value
 * @method boolean   getPrecVta5v()   Returns the current record's "prec_vta5v" value
 * @method boolean   getPrecAgr1v()   Returns the current record's "prec_agr1v" value
 * @method boolean   getPrecAgr2v()   Returns the current record's "prec_agr2v" value
 * @method boolean   getPrecAgr3v()   Returns the current record's "prec_agr3v" value
 * @method boolean   getPrecAgr4v()   Returns the current record's "prec_agr4v" value
 * @method boolean   getPrecAgr5v()   Returns the current record's "prec_agr5v" value
 * @method boolean   getCanAgrv()     Returns the current record's "can_agrv" value
 * @method boolean   getMargMinv()    Returns the current record's "marg_minv" value
 * @method boolean   getUltCosV()     Returns the current record's "ult_cos_v" value
 * @method boolean   getCosProV()     Returns the current record's "cos_pro_v" value
 * @method boolean   getCosMercV()    Returns the current record's "cos_merc_v" value
 * @method boolean   getCosProvV()    Returns the current record's "cos_prov_v" value
 * @method boolean   getUltCosdov()   Returns the current record's "ult_cosdov" value
 * @method boolean   getCosUnanv()    Returns the current record's "cos_unanv" value
 * @method boolean   getUltCosomv()   Returns the current record's "ult_cosomv" value
 * @method boolean   getCosProomv()   Returns the current record's "cos_proomv" value
 * @method boolean   getFecProomv()   Returns the current record's "fec_proomv" value
 * @method boolean   getTipoCosd()    Returns the current record's "tipo_cosd" value
 * @method boolean   getTipoCosv()    Returns the current record's "tipo_cosv" value
 * @method string    getTipoCos()     Returns the current record's "tipo_cos" value
 * @method boolean   getMontComiv()   Returns the current record's "mont_comiv" value
 * @method boolean   getPuntCliv()    Returns the current record's "punt_cliv" value
 * @method boolean   getPuntProv()    Returns the current record's "punt_prov" value
 * @method boolean   getAnuladov()    Returns the current record's "anuladov" value
 * @method boolean   getTipoImpd()    Returns the current record's "tipo_impd" value
 * @method boolean   getTipoImpv()    Returns the current record's "tipo_impv" value
 * @method string    getTipoImp()     Returns the current record's "tipo_imp" value
 * @method boolean   getLicorv()      Returns the current record's "licorv" value
 * @method boolean   getPicturev()    Returns the current record's "picturev" value
 * @method string    getCampo1()      Returns the current record's "campo1" value
 * @method string    getCampo2()      Returns the current record's "campo2" value
 * @method string    getCampo3()      Returns the current record's "campo3" value
 * @method string    getCampo4()      Returns the current record's "campo4" value
 * @method string    getCampo5()      Returns the current record's "campo5" value
 * @method string    getCampo6()      Returns the current record's "campo6" value
 * @method string    getCampo7()      Returns the current record's "campo7" value
 * @method string    getCampo8()      Returns the current record's "campo8" value
 * @method string    getCoUsIn()      Returns the current record's "co_us_in" value
 * @method timestamp getFeUsIn()      Returns the current record's "fe_us_in" value
 * @method string    getCoUsMo()      Returns the current record's "co_us_mo" value
 * @method timestamp getFeUsMo()      Returns the current record's "fe_us_mo" value
 * @method string    getCoUsEl()      Returns the current record's "co_us_el" value
 * @method timestamp getFeUsEl()      Returns the current record's "fe_us_el" value
 * @method string    getRevisado()    Returns the current record's "revisado" value
 * @method string    getTrasnfe()     Returns the current record's "trasnfe" value
 * @method string    getCoSucu()      Returns the current record's "co_sucu" value
 * @method boolean   getPesov()       Returns the current record's "pesov" value
 * @method boolean   getPiev()        Returns the current record's "piev" value
 * @method boolean   getMargen1v()    Returns the current record's "margen1v" value
 * @method boolean   getMargen2v()    Returns the current record's "margen2v" value
 * @method boolean   getMargen3v()    Returns the current record's "margen3v" value
 * @method boolean   getMargen4v()    Returns the current record's "margen4v" value
 * @method boolean   getMargen5v()    Returns the current record's "margen5v" value
 * @method boolean   getTipod()       Returns the current record's "tipod" value
 * @method boolean   getTipov()       Returns the current record's "tipov" value
 * @method string    getTipo()        Returns the current record's "tipo" value
 * @method boolean   getLotev()       Returns the current record's "lotev" value
 * @method boolean   getReactivar()   Returns the current record's "reactivar" value
 * @method boolean   getRelacartv()   Returns the current record's "relacartv" value
 * @method boolean   getPorcAdiv()    Returns the current record's "porc_adiv" value
 * @method boolean   getGarantiav()   Returns the current record's "garantiav" value
 * @method string    getRowguid()     Returns the current record's "rowguid" value
 * @method boolean   getBtPreclote()  Returns the current record's "bt_preclote" value
 * @method boolean   getArtDesiv()    Returns the current record's "art_desiv" value
 * @method boolean   getImagen1v()    Returns the current record's "imagen1v" value
 * @method boolean   getImagen2v()    Returns the current record's "imagen2v" value
 * @method boolean   getBtAranc()     Returns the current record's "bt_aranc" value
 * @method Ambart    setAmbUsua()     Sets the current record's "amb_usua" value
 * @method Ambart    setCoArtv()      Sets the current record's "co_artv" value
 * @method Ambart    setArtDesv()     Sets the current record's "art_desv" value
 * @method Ambart    setFechaRegv()   Sets the current record's "fecha_regv" value
 * @method Ambart    setManjServ()    Sets the current record's "manj_serv" value
 * @method Ambart    setCoLind()      Sets the current record's "co_lind" value
 * @method Ambart    setCoLinv()      Sets the current record's "co_linv" value
 * @method Ambart    setCoLin()       Sets the current record's "co_lin" value
 * @method Ambart    setCoCatd()      Sets the current record's "co_catd" value
 * @method Ambart    setCoCatv()      Sets the current record's "co_catv" value
 * @method Ambart    setCoCat()       Sets the current record's "co_cat" value
 * @method Ambart    setCoSubld()     Sets the current record's "co_subld" value
 * @method Ambart    setCoSublv()     Sets the current record's "co_sublv" value
 * @method Ambart    setCoSubl()      Sets the current record's "co_subl" value
 * @method Ambart    setCoColord()    Sets the current record's "co_colord" value
 * @method Ambart    setCoColorv()    Sets the current record's "co_colorv" value
 * @method Ambart    setCoColor()     Sets the current record's "co_color" value
 * @method Ambart    setItemv()       Sets the current record's "itemv" value
 * @method Ambart    setRefv()        Sets the current record's "refv" value
 * @method Ambart    setModelov()     Sets the current record's "modelov" value
 * @method Ambart    setProcedencd()  Sets the current record's "procedencd" value
 * @method Ambart    setProcedencv()  Sets the current record's "procedencv" value
 * @method Ambart    setProcedenci()  Sets the current record's "procedenci" value
 * @method Ambart    setComentariv()  Sets the current record's "comentariv" value
 * @method Ambart    setCoProvd()     Sets the current record's "co_provd" value
 * @method Ambart    setCoProvv()     Sets the current record's "co_provv" value
 * @method Ambart    setCoProv()      Sets the current record's "co_prov" value
 * @method Ambart    setUbicacionv()  Sets the current record's "ubicacionv" value
 * @method Ambart    setRelacAutd()   Sets the current record's "relac_autd" value
 * @method Ambart    setRelacAutv()   Sets the current record's "relac_autv" value
 * @method Ambart    setRelacAut()    Sets the current record's "relac_aut" value
 * @method Ambart    setPtoPedidv()   Sets the current record's "pto_pedidv" value
 * @method Ambart    setStockMaxv()   Sets the current record's "stock_maxv" value
 * @method Ambart    setStockMinv()   Sets the current record's "stock_minv" value
 * @method Ambart    setPrecOmv()     Sets the current record's "prec_omv" value
 * @method Ambart    setPrecVta1v()   Sets the current record's "prec_vta1v" value
 * @method Ambart    setPrecVta2v()   Sets the current record's "prec_vta2v" value
 * @method Ambart    setPrecVta3v()   Sets the current record's "prec_vta3v" value
 * @method Ambart    setPrecVta4v()   Sets the current record's "prec_vta4v" value
 * @method Ambart    setPrecVta5v()   Sets the current record's "prec_vta5v" value
 * @method Ambart    setPrecAgr1v()   Sets the current record's "prec_agr1v" value
 * @method Ambart    setPrecAgr2v()   Sets the current record's "prec_agr2v" value
 * @method Ambart    setPrecAgr3v()   Sets the current record's "prec_agr3v" value
 * @method Ambart    setPrecAgr4v()   Sets the current record's "prec_agr4v" value
 * @method Ambart    setPrecAgr5v()   Sets the current record's "prec_agr5v" value
 * @method Ambart    setCanAgrv()     Sets the current record's "can_agrv" value
 * @method Ambart    setMargMinv()    Sets the current record's "marg_minv" value
 * @method Ambart    setUltCosV()     Sets the current record's "ult_cos_v" value
 * @method Ambart    setCosProV()     Sets the current record's "cos_pro_v" value
 * @method Ambart    setCosMercV()    Sets the current record's "cos_merc_v" value
 * @method Ambart    setCosProvV()    Sets the current record's "cos_prov_v" value
 * @method Ambart    setUltCosdov()   Sets the current record's "ult_cosdov" value
 * @method Ambart    setCosUnanv()    Sets the current record's "cos_unanv" value
 * @method Ambart    setUltCosomv()   Sets the current record's "ult_cosomv" value
 * @method Ambart    setCosProomv()   Sets the current record's "cos_proomv" value
 * @method Ambart    setFecProomv()   Sets the current record's "fec_proomv" value
 * @method Ambart    setTipoCosd()    Sets the current record's "tipo_cosd" value
 * @method Ambart    setTipoCosv()    Sets the current record's "tipo_cosv" value
 * @method Ambart    setTipoCos()     Sets the current record's "tipo_cos" value
 * @method Ambart    setMontComiv()   Sets the current record's "mont_comiv" value
 * @method Ambart    setPuntCliv()    Sets the current record's "punt_cliv" value
 * @method Ambart    setPuntProv()    Sets the current record's "punt_prov" value
 * @method Ambart    setAnuladov()    Sets the current record's "anuladov" value
 * @method Ambart    setTipoImpd()    Sets the current record's "tipo_impd" value
 * @method Ambart    setTipoImpv()    Sets the current record's "tipo_impv" value
 * @method Ambart    setTipoImp()     Sets the current record's "tipo_imp" value
 * @method Ambart    setLicorv()      Sets the current record's "licorv" value
 * @method Ambart    setPicturev()    Sets the current record's "picturev" value
 * @method Ambart    setCampo1()      Sets the current record's "campo1" value
 * @method Ambart    setCampo2()      Sets the current record's "campo2" value
 * @method Ambart    setCampo3()      Sets the current record's "campo3" value
 * @method Ambart    setCampo4()      Sets the current record's "campo4" value
 * @method Ambart    setCampo5()      Sets the current record's "campo5" value
 * @method Ambart    setCampo6()      Sets the current record's "campo6" value
 * @method Ambart    setCampo7()      Sets the current record's "campo7" value
 * @method Ambart    setCampo8()      Sets the current record's "campo8" value
 * @method Ambart    setCoUsIn()      Sets the current record's "co_us_in" value
 * @method Ambart    setFeUsIn()      Sets the current record's "fe_us_in" value
 * @method Ambart    setCoUsMo()      Sets the current record's "co_us_mo" value
 * @method Ambart    setFeUsMo()      Sets the current record's "fe_us_mo" value
 * @method Ambart    setCoUsEl()      Sets the current record's "co_us_el" value
 * @method Ambart    setFeUsEl()      Sets the current record's "fe_us_el" value
 * @method Ambart    setRevisado()    Sets the current record's "revisado" value
 * @method Ambart    setTrasnfe()     Sets the current record's "trasnfe" value
 * @method Ambart    setCoSucu()      Sets the current record's "co_sucu" value
 * @method Ambart    setPesov()       Sets the current record's "pesov" value
 * @method Ambart    setPiev()        Sets the current record's "piev" value
 * @method Ambart    setMargen1v()    Sets the current record's "margen1v" value
 * @method Ambart    setMargen2v()    Sets the current record's "margen2v" value
 * @method Ambart    setMargen3v()    Sets the current record's "margen3v" value
 * @method Ambart    setMargen4v()    Sets the current record's "margen4v" value
 * @method Ambart    setMargen5v()    Sets the current record's "margen5v" value
 * @method Ambart    setTipod()       Sets the current record's "tipod" value
 * @method Ambart    setTipov()       Sets the current record's "tipov" value
 * @method Ambart    setTipo()        Sets the current record's "tipo" value
 * @method Ambart    setLotev()       Sets the current record's "lotev" value
 * @method Ambart    setReactivar()   Sets the current record's "reactivar" value
 * @method Ambart    setRelacartv()   Sets the current record's "relacartv" value
 * @method Ambart    setPorcAdiv()    Sets the current record's "porc_adiv" value
 * @method Ambart    setGarantiav()   Sets the current record's "garantiav" value
 * @method Ambart    setRowguid()     Sets the current record's "rowguid" value
 * @method Ambart    setBtPreclote()  Sets the current record's "bt_preclote" value
 * @method Ambart    setArtDesiv()    Sets the current record's "art_desiv" value
 * @method Ambart    setImagen1v()    Sets the current record's "imagen1v" value
 * @method Ambart    setImagen2v()    Sets the current record's "imagen2v" value
 * @method Ambart    setBtAranc()     Sets the current record's "bt_aranc" value
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis Hernández
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseAmbart extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('ambart');
        $this->hasColumn('amb_usua', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('co_artv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('art_desv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('fecha_regv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('manj_serv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_lind', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_linv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_lin', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('co_catd', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_catv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_cat', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('co_subld', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_sublv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_subl', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('co_colord', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_colorv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_color', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('itemv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('refv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('modelov', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('procedencd', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('procedencv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('procedenci', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('comentariv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_provd', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_provv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_prov', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('ubicacionv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('relac_autd', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('relac_autv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('relac_aut', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('pto_pedidv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('stock_maxv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('stock_minv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('prec_omv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('prec_vta1v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('prec_vta2v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('prec_vta3v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('prec_vta4v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('prec_vta5v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('prec_agr1v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('prec_agr2v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('prec_agr3v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('prec_agr4v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('prec_agr5v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('can_agrv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('marg_minv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('ult_cos_v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('cos_pro_v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('cos_merc_v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('cos_prov_v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('ult_cosdov', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('cos_unanv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('ult_cosomv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('cos_proomv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('fec_proomv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('tipo_cosd', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('tipo_cosv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('tipo_cos', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('mont_comiv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('punt_cliv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('punt_prov', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('anuladov', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('tipo_impd', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('tipo_impv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('tipo_imp', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('licorv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('picturev', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('campo1', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo2', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo3', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo4', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo5', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo6', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo7', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo8', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('revisado', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('trasnfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_sucu', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('pesov', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('piev', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('margen1v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('margen2v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('margen3v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('margen4v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('margen5v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('tipod', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('tipov', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('tipo', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('lotev', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('reactivar', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('relacartv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('porc_adiv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('garantiav', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('bt_preclote', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('art_desiv', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('imagen1v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('imagen2v', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('bt_aranc', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}