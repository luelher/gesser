<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RengAim', 'profit');

/**
 * BaseRengAim
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $imp_num
 * @property integer $reng_num
 * @property integer $fact_num
 * @property string $co_art
 * @property decimal $cantidad
 * @property decimal $neto
 * @property string $rowguid
 * @property decimal $costo_d
 * @property decimal $nuevo_co
 * @property decimal $margen
 * @property decimal $porc_ara
 * @property decimal $pie_cub
 * @property decimal $peso
 * @property string $moneda
 * @property decimal $tasa
 * @property integer $reng_doc
 * @property Import $Import
 * @property RengCom $RengCom
 * @property Art $Art
 * @property Moneda $Moneda
 * @property RengCom $RengCom_5
 * @property Doctrine_Collection $RImpCo
 * @property Doctrine_Collection $RImpCo_2
 * 
 * @method integer             getImpNum()    Returns the current record's "imp_num" value
 * @method integer             getRengNum()   Returns the current record's "reng_num" value
 * @method integer             getFactNum()   Returns the current record's "fact_num" value
 * @method string              getCoArt()     Returns the current record's "co_art" value
 * @method decimal             getCantidad()  Returns the current record's "cantidad" value
 * @method decimal             getNeto()      Returns the current record's "neto" value
 * @method string              getRowguid()   Returns the current record's "rowguid" value
 * @method decimal             getCostoD()    Returns the current record's "costo_d" value
 * @method decimal             getNuevoCo()   Returns the current record's "nuevo_co" value
 * @method decimal             getMargen()    Returns the current record's "margen" value
 * @method decimal             getPorcAra()   Returns the current record's "porc_ara" value
 * @method decimal             getPieCub()    Returns the current record's "pie_cub" value
 * @method decimal             getPeso()      Returns the current record's "peso" value
 * @method string              getMoneda()    Returns the current record's "moneda" value
 * @method decimal             getTasa()      Returns the current record's "tasa" value
 * @method integer             getRengDoc()   Returns the current record's "reng_doc" value
 * @method Import              getImport()    Returns the current record's "Import" value
 * @method RengCom             getRengCom()   Returns the current record's "RengCom" value
 * @method Art                 getArt()       Returns the current record's "Art" value
 * @method Moneda              getMoneda()    Returns the current record's "Moneda" value
 * @method RengCom             getRengCom5()  Returns the current record's "RengCom_5" value
 * @method Doctrine_Collection getRImpCo()    Returns the current record's "RImpCo" collection
 * @method Doctrine_Collection getRImpCo2()   Returns the current record's "RImpCo_2" collection
 * @method RengAim             setImpNum()    Sets the current record's "imp_num" value
 * @method RengAim             setRengNum()   Sets the current record's "reng_num" value
 * @method RengAim             setFactNum()   Sets the current record's "fact_num" value
 * @method RengAim             setCoArt()     Sets the current record's "co_art" value
 * @method RengAim             setCantidad()  Sets the current record's "cantidad" value
 * @method RengAim             setNeto()      Sets the current record's "neto" value
 * @method RengAim             setRowguid()   Sets the current record's "rowguid" value
 * @method RengAim             setCostoD()    Sets the current record's "costo_d" value
 * @method RengAim             setNuevoCo()   Sets the current record's "nuevo_co" value
 * @method RengAim             setMargen()    Sets the current record's "margen" value
 * @method RengAim             setPorcAra()   Sets the current record's "porc_ara" value
 * @method RengAim             setPieCub()    Sets the current record's "pie_cub" value
 * @method RengAim             setPeso()      Sets the current record's "peso" value
 * @method RengAim             setMoneda()    Sets the current record's "moneda" value
 * @method RengAim             setTasa()      Sets the current record's "tasa" value
 * @method RengAim             setRengDoc()   Sets the current record's "reng_doc" value
 * @method RengAim             setImport()    Sets the current record's "Import" value
 * @method RengAim             setRengCom()   Sets the current record's "RengCom" value
 * @method RengAim             setArt()       Sets the current record's "Art" value
 * @method RengAim             setMoneda()    Sets the current record's "Moneda" value
 * @method RengAim             setRengCom5()  Sets the current record's "RengCom_5" value
 * @method RengAim             setRImpCo()    Sets the current record's "RImpCo" collection
 * @method RengAim             setRImpCo2()   Sets the current record's "RImpCo_2" collection
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis Hernández
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRengAim extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reng_aim');
        $this->hasColumn('imp_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('reng_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fact_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('co_art', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('cantidad', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('neto', 'decimal', 22, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 22,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('costo_d', 'decimal', 22, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 22,
             ));
        $this->hasColumn('nuevo_co', 'decimal', 22, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 22,
             ));
        $this->hasColumn('margen', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('porc_ara', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('pie_cub', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('peso', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('moneda', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('tasa', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('reng_doc', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Import', array(
             'local' => 'imp_num',
             'foreign' => 'imp_num'));

        $this->hasOne('RengCom', array(
             'local' => 'fact_num',
             'foreign' => 'fact_num'));

        $this->hasOne('Art', array(
             'local' => 'co_art',
             'foreign' => 'co_art'));

        $this->hasOne('Moneda', array(
             'local' => 'moneda',
             'foreign' => 'co_mone'));

        $this->hasOne('RengCom as RengCom_5', array(
             'local' => 'reng_doc',
             'foreign' => 'reng_num'));

        $this->hasMany('RImpCo', array(
             'local' => 'imp_num',
             'foreign' => 'fact_nu1'));

        $this->hasMany('RImpCo as RImpCo_2', array(
             'local' => 'reng_num',
             'foreign' => 'reng_nu1'));
    }
}