<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Spcostest', 'profit');

/**
 * BaseSpcostest
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $cost_num
 * @property timestamp $fec_vig
 * @property timestamp $fe_emis
 * @property string $cost_des
 * @property string $campo1
 * @property string $campo2
 * @property string $campo3
 * @property string $campo4
 * @property string $campo5
 * @property string $campo6
 * @property string $campo7
 * @property string $campo8
 * @property string $co_us_in
 * @property string $co_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_in
 * @property timestamp $fe_us_mo
 * @property timestamp $fe_us_el
 * @property string $rowguid
 * @property string $co_sucu
 * @property string $trasnfe
 * @property Doctrine_Collection $RengCos
 * 
 * @method integer             getCostNum()  Returns the current record's "cost_num" value
 * @method timestamp           getFecVig()   Returns the current record's "fec_vig" value
 * @method timestamp           getFeEmis()   Returns the current record's "fe_emis" value
 * @method string              getCostDes()  Returns the current record's "cost_des" value
 * @method string              getCampo1()   Returns the current record's "campo1" value
 * @method string              getCampo2()   Returns the current record's "campo2" value
 * @method string              getCampo3()   Returns the current record's "campo3" value
 * @method string              getCampo4()   Returns the current record's "campo4" value
 * @method string              getCampo5()   Returns the current record's "campo5" value
 * @method string              getCampo6()   Returns the current record's "campo6" value
 * @method string              getCampo7()   Returns the current record's "campo7" value
 * @method string              getCampo8()   Returns the current record's "campo8" value
 * @method string              getCoUsIn()   Returns the current record's "co_us_in" value
 * @method string              getCoUsMo()   Returns the current record's "co_us_mo" value
 * @method string              getCoUsEl()   Returns the current record's "co_us_el" value
 * @method timestamp           getFeUsIn()   Returns the current record's "fe_us_in" value
 * @method timestamp           getFeUsMo()   Returns the current record's "fe_us_mo" value
 * @method timestamp           getFeUsEl()   Returns the current record's "fe_us_el" value
 * @method string              getRowguid()  Returns the current record's "rowguid" value
 * @method string              getCoSucu()   Returns the current record's "co_sucu" value
 * @method string              getTrasnfe()  Returns the current record's "trasnfe" value
 * @method Doctrine_Collection getRengCos()  Returns the current record's "RengCos" collection
 * @method Spcostest           setCostNum()  Sets the current record's "cost_num" value
 * @method Spcostest           setFecVig()   Sets the current record's "fec_vig" value
 * @method Spcostest           setFeEmis()   Sets the current record's "fe_emis" value
 * @method Spcostest           setCostDes()  Sets the current record's "cost_des" value
 * @method Spcostest           setCampo1()   Sets the current record's "campo1" value
 * @method Spcostest           setCampo2()   Sets the current record's "campo2" value
 * @method Spcostest           setCampo3()   Sets the current record's "campo3" value
 * @method Spcostest           setCampo4()   Sets the current record's "campo4" value
 * @method Spcostest           setCampo5()   Sets the current record's "campo5" value
 * @method Spcostest           setCampo6()   Sets the current record's "campo6" value
 * @method Spcostest           setCampo7()   Sets the current record's "campo7" value
 * @method Spcostest           setCampo8()   Sets the current record's "campo8" value
 * @method Spcostest           setCoUsIn()   Sets the current record's "co_us_in" value
 * @method Spcostest           setCoUsMo()   Sets the current record's "co_us_mo" value
 * @method Spcostest           setCoUsEl()   Sets the current record's "co_us_el" value
 * @method Spcostest           setFeUsIn()   Sets the current record's "fe_us_in" value
 * @method Spcostest           setFeUsMo()   Sets the current record's "fe_us_mo" value
 * @method Spcostest           setFeUsEl()   Sets the current record's "fe_us_el" value
 * @method Spcostest           setRowguid()  Sets the current record's "rowguid" value
 * @method Spcostest           setCoSucu()   Sets the current record's "co_sucu" value
 * @method Spcostest           setTrasnfe()  Sets the current record's "trasnfe" value
 * @method Spcostest           setRengCos()  Sets the current record's "RengCos" collection
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSpcostest extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('spcostest');
        $this->hasColumn('cost_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fec_vig', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(convert(varchar(10),getdate(),104))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('fe_emis', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(getdate())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('cost_des', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo1', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo2', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo3', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo4', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo5', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo6', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo7', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo8', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(getdate())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(getdate())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(getdate())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('co_sucu', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('trasnfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('RengCos', array(
             'local' => 'cost_num',
             'foreign' => 'cost_num'));
    }
}