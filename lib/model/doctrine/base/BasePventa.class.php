<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Pventa', 'profit');

/**
 * BasePventa
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $fact_num
 * @property boolean $contrib
 * @property string $nombre
 * @property string $rif
 * @property string $nit
 * @property integer $num_contro
 * @property string $numcon
 * @property string $status
 * @property string $comentario
 * @property string $descrip
 * @property float $saldo
 * @property timestamp $fec_emis
 * @property timestamp $fec_venc
 * @property string $co_cli
 * @property string $co_ven
 * @property string $co_tran
 * @property string $dir_ent
 * @property string $forma_pag
 * @property float $tot_bruto
 * @property float $tot_neto
 * @property float $glob_desc
 * @property float $tot_reca
 * @property string $porc_gdesc
 * @property string $porc_reca
 * @property float $total_uc
 * @property float $total_cp
 * @property float $tot_flete
 * @property float $monto_dev
 * @property float $totklu
 * @property boolean $anulada
 * @property boolean $impresa
 * @property float $iva
 * @property float $iva_dev
 * @property timestamp $feccom
 * @property integer $numcom
 * @property float $tasa
 * @property string $moneda
 * @property string $dis_cen
 * @property float $vuelto
 * @property integer $seriales
 * @property float $tasag
 * @property float $tasag10
 * @property float $tasag20
 * @property string $campo1
 * @property string $campo2
 * @property string $campo3
 * @property string $campo4
 * @property string $campo5
 * @property string $campo6
 * @property string $campo7
 * @property string $campo8
 * @property string $co_us_in
 * @property timestamp $fe_us_in
 * @property string $co_us_mo
 * @property timestamp $fe_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_el
 * @property string $revisado
 * @property string $trasnfe
 * @property string $co_sucu
 * @property float $mon_ilc
 * @property float $otros1
 * @property float $otros2
 * @property float $otros3
 * @property integer $num_turno
 * @property string $rowguid
 * @property decimal $aux01
 * @property string $aux02
 * @property string $salestax
 * @property string $origen
 * @property string $origen_d
 * @property string $telefono
 * 
 * @method integer   getFactNum()    Returns the current record's "fact_num" value
 * @method boolean   getContrib()    Returns the current record's "contrib" value
 * @method string    getNombre()     Returns the current record's "nombre" value
 * @method string    getRif()        Returns the current record's "rif" value
 * @method string    getNit()        Returns the current record's "nit" value
 * @method integer   getNumContro()  Returns the current record's "num_contro" value
 * @method string    getNumcon()     Returns the current record's "numcon" value
 * @method string    getStatus()     Returns the current record's "status" value
 * @method string    getComentario() Returns the current record's "comentario" value
 * @method string    getDescrip()    Returns the current record's "descrip" value
 * @method float     getSaldo()      Returns the current record's "saldo" value
 * @method timestamp getFecEmis()    Returns the current record's "fec_emis" value
 * @method timestamp getFecVenc()    Returns the current record's "fec_venc" value
 * @method string    getCoCli()      Returns the current record's "co_cli" value
 * @method string    getCoVen()      Returns the current record's "co_ven" value
 * @method string    getCoTran()     Returns the current record's "co_tran" value
 * @method string    getDirEnt()     Returns the current record's "dir_ent" value
 * @method string    getFormaPag()   Returns the current record's "forma_pag" value
 * @method float     getTotBruto()   Returns the current record's "tot_bruto" value
 * @method float     getTotNeto()    Returns the current record's "tot_neto" value
 * @method float     getGlobDesc()   Returns the current record's "glob_desc" value
 * @method float     getTotReca()    Returns the current record's "tot_reca" value
 * @method string    getPorcGdesc()  Returns the current record's "porc_gdesc" value
 * @method string    getPorcReca()   Returns the current record's "porc_reca" value
 * @method float     getTotalUc()    Returns the current record's "total_uc" value
 * @method float     getTotalCp()    Returns the current record's "total_cp" value
 * @method float     getTotFlete()   Returns the current record's "tot_flete" value
 * @method float     getMontoDev()   Returns the current record's "monto_dev" value
 * @method float     getTotklu()     Returns the current record's "totklu" value
 * @method boolean   getAnulada()    Returns the current record's "anulada" value
 * @method boolean   getImpresa()    Returns the current record's "impresa" value
 * @method float     getIva()        Returns the current record's "iva" value
 * @method float     getIvaDev()     Returns the current record's "iva_dev" value
 * @method timestamp getFeccom()     Returns the current record's "feccom" value
 * @method integer   getNumcom()     Returns the current record's "numcom" value
 * @method float     getTasa()       Returns the current record's "tasa" value
 * @method string    getMoneda()     Returns the current record's "moneda" value
 * @method string    getDisCen()     Returns the current record's "dis_cen" value
 * @method float     getVuelto()     Returns the current record's "vuelto" value
 * @method integer   getSeriales()   Returns the current record's "seriales" value
 * @method float     getTasag()      Returns the current record's "tasag" value
 * @method float     getTasag10()    Returns the current record's "tasag10" value
 * @method float     getTasag20()    Returns the current record's "tasag20" value
 * @method string    getCampo1()     Returns the current record's "campo1" value
 * @method string    getCampo2()     Returns the current record's "campo2" value
 * @method string    getCampo3()     Returns the current record's "campo3" value
 * @method string    getCampo4()     Returns the current record's "campo4" value
 * @method string    getCampo5()     Returns the current record's "campo5" value
 * @method string    getCampo6()     Returns the current record's "campo6" value
 * @method string    getCampo7()     Returns the current record's "campo7" value
 * @method string    getCampo8()     Returns the current record's "campo8" value
 * @method string    getCoUsIn()     Returns the current record's "co_us_in" value
 * @method timestamp getFeUsIn()     Returns the current record's "fe_us_in" value
 * @method string    getCoUsMo()     Returns the current record's "co_us_mo" value
 * @method timestamp getFeUsMo()     Returns the current record's "fe_us_mo" value
 * @method string    getCoUsEl()     Returns the current record's "co_us_el" value
 * @method timestamp getFeUsEl()     Returns the current record's "fe_us_el" value
 * @method string    getRevisado()   Returns the current record's "revisado" value
 * @method string    getTrasnfe()    Returns the current record's "trasnfe" value
 * @method string    getCoSucu()     Returns the current record's "co_sucu" value
 * @method float     getMonIlc()     Returns the current record's "mon_ilc" value
 * @method float     getOtros1()     Returns the current record's "otros1" value
 * @method float     getOtros2()     Returns the current record's "otros2" value
 * @method float     getOtros3()     Returns the current record's "otros3" value
 * @method integer   getNumTurno()   Returns the current record's "num_turno" value
 * @method string    getRowguid()    Returns the current record's "rowguid" value
 * @method decimal   getAux01()      Returns the current record's "aux01" value
 * @method string    getAux02()      Returns the current record's "aux02" value
 * @method string    getSalestax()   Returns the current record's "salestax" value
 * @method string    getOrigen()     Returns the current record's "origen" value
 * @method string    getOrigenD()    Returns the current record's "origen_d" value
 * @method string    getTelefono()   Returns the current record's "telefono" value
 * @method Pventa    setFactNum()    Sets the current record's "fact_num" value
 * @method Pventa    setContrib()    Sets the current record's "contrib" value
 * @method Pventa    setNombre()     Sets the current record's "nombre" value
 * @method Pventa    setRif()        Sets the current record's "rif" value
 * @method Pventa    setNit()        Sets the current record's "nit" value
 * @method Pventa    setNumContro()  Sets the current record's "num_contro" value
 * @method Pventa    setNumcon()     Sets the current record's "numcon" value
 * @method Pventa    setStatus()     Sets the current record's "status" value
 * @method Pventa    setComentario() Sets the current record's "comentario" value
 * @method Pventa    setDescrip()    Sets the current record's "descrip" value
 * @method Pventa    setSaldo()      Sets the current record's "saldo" value
 * @method Pventa    setFecEmis()    Sets the current record's "fec_emis" value
 * @method Pventa    setFecVenc()    Sets the current record's "fec_venc" value
 * @method Pventa    setCoCli()      Sets the current record's "co_cli" value
 * @method Pventa    setCoVen()      Sets the current record's "co_ven" value
 * @method Pventa    setCoTran()     Sets the current record's "co_tran" value
 * @method Pventa    setDirEnt()     Sets the current record's "dir_ent" value
 * @method Pventa    setFormaPag()   Sets the current record's "forma_pag" value
 * @method Pventa    setTotBruto()   Sets the current record's "tot_bruto" value
 * @method Pventa    setTotNeto()    Sets the current record's "tot_neto" value
 * @method Pventa    setGlobDesc()   Sets the current record's "glob_desc" value
 * @method Pventa    setTotReca()    Sets the current record's "tot_reca" value
 * @method Pventa    setPorcGdesc()  Sets the current record's "porc_gdesc" value
 * @method Pventa    setPorcReca()   Sets the current record's "porc_reca" value
 * @method Pventa    setTotalUc()    Sets the current record's "total_uc" value
 * @method Pventa    setTotalCp()    Sets the current record's "total_cp" value
 * @method Pventa    setTotFlete()   Sets the current record's "tot_flete" value
 * @method Pventa    setMontoDev()   Sets the current record's "monto_dev" value
 * @method Pventa    setTotklu()     Sets the current record's "totklu" value
 * @method Pventa    setAnulada()    Sets the current record's "anulada" value
 * @method Pventa    setImpresa()    Sets the current record's "impresa" value
 * @method Pventa    setIva()        Sets the current record's "iva" value
 * @method Pventa    setIvaDev()     Sets the current record's "iva_dev" value
 * @method Pventa    setFeccom()     Sets the current record's "feccom" value
 * @method Pventa    setNumcom()     Sets the current record's "numcom" value
 * @method Pventa    setTasa()       Sets the current record's "tasa" value
 * @method Pventa    setMoneda()     Sets the current record's "moneda" value
 * @method Pventa    setDisCen()     Sets the current record's "dis_cen" value
 * @method Pventa    setVuelto()     Sets the current record's "vuelto" value
 * @method Pventa    setSeriales()   Sets the current record's "seriales" value
 * @method Pventa    setTasag()      Sets the current record's "tasag" value
 * @method Pventa    setTasag10()    Sets the current record's "tasag10" value
 * @method Pventa    setTasag20()    Sets the current record's "tasag20" value
 * @method Pventa    setCampo1()     Sets the current record's "campo1" value
 * @method Pventa    setCampo2()     Sets the current record's "campo2" value
 * @method Pventa    setCampo3()     Sets the current record's "campo3" value
 * @method Pventa    setCampo4()     Sets the current record's "campo4" value
 * @method Pventa    setCampo5()     Sets the current record's "campo5" value
 * @method Pventa    setCampo6()     Sets the current record's "campo6" value
 * @method Pventa    setCampo7()     Sets the current record's "campo7" value
 * @method Pventa    setCampo8()     Sets the current record's "campo8" value
 * @method Pventa    setCoUsIn()     Sets the current record's "co_us_in" value
 * @method Pventa    setFeUsIn()     Sets the current record's "fe_us_in" value
 * @method Pventa    setCoUsMo()     Sets the current record's "co_us_mo" value
 * @method Pventa    setFeUsMo()     Sets the current record's "fe_us_mo" value
 * @method Pventa    setCoUsEl()     Sets the current record's "co_us_el" value
 * @method Pventa    setFeUsEl()     Sets the current record's "fe_us_el" value
 * @method Pventa    setRevisado()   Sets the current record's "revisado" value
 * @method Pventa    setTrasnfe()    Sets the current record's "trasnfe" value
 * @method Pventa    setCoSucu()     Sets the current record's "co_sucu" value
 * @method Pventa    setMonIlc()     Sets the current record's "mon_ilc" value
 * @method Pventa    setOtros1()     Sets the current record's "otros1" value
 * @method Pventa    setOtros2()     Sets the current record's "otros2" value
 * @method Pventa    setOtros3()     Sets the current record's "otros3" value
 * @method Pventa    setNumTurno()   Sets the current record's "num_turno" value
 * @method Pventa    setRowguid()    Sets the current record's "rowguid" value
 * @method Pventa    setAux01()      Sets the current record's "aux01" value
 * @method Pventa    setAux02()      Sets the current record's "aux02" value
 * @method Pventa    setSalestax()   Sets the current record's "salestax" value
 * @method Pventa    setOrigen()     Sets the current record's "origen" value
 * @method Pventa    setOrigenD()    Sets the current record's "origen_d" value
 * @method Pventa    setTelefono()   Sets the current record's "telefono" value
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis Hernández
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BasePventa extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('pventa');
        $this->hasColumn('fact_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('contrib', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('nombre', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('rif', 'string', 18, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('nit', 'string', 18, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('num_contro', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('numcon', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('status', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('comentario', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('descrip', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('saldo', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('fec_emis', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(convert(varchar(10),getdate(),104))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('fec_venc', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(convert(varchar(10),getdate(),104))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_cli', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('co_ven', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('co_tran', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('dir_ent', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('forma_pag', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('tot_bruto', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('tot_neto', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('glob_desc', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('tot_reca', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('porc_gdesc', 'string', 15, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('porc_reca', 'string', 15, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('total_uc', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('total_cp', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('tot_flete', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('monto_dev', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('totklu', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('anulada', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('impresa', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('iva', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('iva_dev', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('feccom', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(\'01/01/1900\')',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('numcom', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('tasa', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('moneda', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('dis_cen', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('vuelto', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('seriales', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('tasag', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('tasag10', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('tasag20', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('campo1', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo2', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo3', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo4', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo5', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo6', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo7', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo8', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('revisado', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('trasnfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_sucu', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('mon_ilc', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('otros1', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('otros2', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('otros3', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('num_turno', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('aux01', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('aux02', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('salestax', 'string', 8, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('origen', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('origen_d', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('telefono', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space((60)))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}