<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Tasas', 'profit');

/**
 * BaseTasas
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $co_mone
 * @property timestamp $fecha
 * @property decimal $tasa_c
 * @property decimal $tasa_v
 * @property string $co_us_in
 * @property timestamp $fe_us_in
 * @property string $co_us_mo
 * @property timestamp $fe_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_el
 * @property string $trasnfe
 * @property string $revisado
 * @property string $co_sucu
 * @property string $rowguid
 * @property Moneda $Moneda
 * 
 * @method string    getCoMone()   Returns the current record's "co_mone" value
 * @method timestamp getFecha()    Returns the current record's "fecha" value
 * @method decimal   getTasaC()    Returns the current record's "tasa_c" value
 * @method decimal   getTasaV()    Returns the current record's "tasa_v" value
 * @method string    getCoUsIn()   Returns the current record's "co_us_in" value
 * @method timestamp getFeUsIn()   Returns the current record's "fe_us_in" value
 * @method string    getCoUsMo()   Returns the current record's "co_us_mo" value
 * @method timestamp getFeUsMo()   Returns the current record's "fe_us_mo" value
 * @method string    getCoUsEl()   Returns the current record's "co_us_el" value
 * @method timestamp getFeUsEl()   Returns the current record's "fe_us_el" value
 * @method string    getTrasnfe()  Returns the current record's "trasnfe" value
 * @method string    getRevisado() Returns the current record's "revisado" value
 * @method string    getCoSucu()   Returns the current record's "co_sucu" value
 * @method string    getRowguid()  Returns the current record's "rowguid" value
 * @method Moneda    getMoneda()   Returns the current record's "Moneda" value
 * @method Tasas     setCoMone()   Sets the current record's "co_mone" value
 * @method Tasas     setFecha()    Sets the current record's "fecha" value
 * @method Tasas     setTasaC()    Sets the current record's "tasa_c" value
 * @method Tasas     setTasaV()    Sets the current record's "tasa_v" value
 * @method Tasas     setCoUsIn()   Sets the current record's "co_us_in" value
 * @method Tasas     setFeUsIn()   Sets the current record's "fe_us_in" value
 * @method Tasas     setCoUsMo()   Sets the current record's "co_us_mo" value
 * @method Tasas     setFeUsMo()   Sets the current record's "fe_us_mo" value
 * @method Tasas     setCoUsEl()   Sets the current record's "co_us_el" value
 * @method Tasas     setFeUsEl()   Sets the current record's "fe_us_el" value
 * @method Tasas     setTrasnfe()  Sets the current record's "trasnfe" value
 * @method Tasas     setRevisado() Sets the current record's "revisado" value
 * @method Tasas     setCoSucu()   Sets the current record's "co_sucu" value
 * @method Tasas     setRowguid()  Sets the current record's "rowguid" value
 * @method Tasas     setMoneda()   Sets the current record's "Moneda" value
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseTasas extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('tasas');
        $this->hasColumn('co_mone', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('fecha', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('tasa_c', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('tasa_v', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('trasnfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('revisado', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_sucu', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Moneda', array(
             'local' => 'co_mone',
             'foreign' => 'co_mone'));
    }
}