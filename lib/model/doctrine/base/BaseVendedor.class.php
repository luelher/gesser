<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Vendedor', 'profit');

/**
 * BaseVendedor
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $co_ven
 * @property string $tipo
 * @property string $ven_des
 * @property string $dis_cen
 * @property string $cedula
 * @property string $direc1
 * @property string $direc2
 * @property string $telefonos
 * @property timestamp $fecha_reg
 * @property boolean $condic
 * @property decimal $comision
 * @property string $comen
 * @property boolean $fun_cob
 * @property boolean $fun_ven
 * @property decimal $comisionv
 * @property integer $fac_ult_ve
 * @property timestamp $fec_ult_ve
 * @property decimal $net_ult_ve
 * @property string $cli_ult_ve
 * @property string $cta_contab
 * @property string $campo1
 * @property string $campo2
 * @property string $campo3
 * @property string $campo4
 * @property string $campo5
 * @property string $campo6
 * @property string $campo7
 * @property string $campo8
 * @property string $co_us_in
 * @property timestamp $fe_us_in
 * @property string $co_us_mo
 * @property timestamp $fe_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_el
 * @property string $revisado
 * @property string $trasnfe
 * @property string $co_sucu
 * @property string $rowguid
 * @property string $login
 * @property string $password
 * @property string $email
 * @property string $psw_m
 * @property Doctrine_Collection $Clientes
 * @property Doctrine_Collection $Cobros
 * @property Doctrine_Collection $CotizC
 * @property Doctrine_Collection $DevCli
 * @property Doctrine_Collection $DocumCc
 * @property Doctrine_Collection $Factura
 * @property Doctrine_Collection $NotDep
 * @property Doctrine_Collection $NotEnt
 * @property Doctrine_Collection $Pedidos
 * @property Doctrine_Collection $Plavent
 * 
 * @method string              getCoVen()      Returns the current record's "co_ven" value
 * @method string              getTipo()       Returns the current record's "tipo" value
 * @method string              getVenDes()     Returns the current record's "ven_des" value
 * @method string              getDisCen()     Returns the current record's "dis_cen" value
 * @method string              getCedula()     Returns the current record's "cedula" value
 * @method string              getDirec1()     Returns the current record's "direc1" value
 * @method string              getDirec2()     Returns the current record's "direc2" value
 * @method string              getTelefonos()  Returns the current record's "telefonos" value
 * @method timestamp           getFechaReg()   Returns the current record's "fecha_reg" value
 * @method boolean             getCondic()     Returns the current record's "condic" value
 * @method decimal             getComision()   Returns the current record's "comision" value
 * @method string              getComen()      Returns the current record's "comen" value
 * @method boolean             getFunCob()     Returns the current record's "fun_cob" value
 * @method boolean             getFunVen()     Returns the current record's "fun_ven" value
 * @method decimal             getComisionv()  Returns the current record's "comisionv" value
 * @method integer             getFacUltVe()   Returns the current record's "fac_ult_ve" value
 * @method timestamp           getFecUltVe()   Returns the current record's "fec_ult_ve" value
 * @method decimal             getNetUltVe()   Returns the current record's "net_ult_ve" value
 * @method string              getCliUltVe()   Returns the current record's "cli_ult_ve" value
 * @method string              getCtaContab()  Returns the current record's "cta_contab" value
 * @method string              getCampo1()     Returns the current record's "campo1" value
 * @method string              getCampo2()     Returns the current record's "campo2" value
 * @method string              getCampo3()     Returns the current record's "campo3" value
 * @method string              getCampo4()     Returns the current record's "campo4" value
 * @method string              getCampo5()     Returns the current record's "campo5" value
 * @method string              getCampo6()     Returns the current record's "campo6" value
 * @method string              getCampo7()     Returns the current record's "campo7" value
 * @method string              getCampo8()     Returns the current record's "campo8" value
 * @method string              getCoUsIn()     Returns the current record's "co_us_in" value
 * @method timestamp           getFeUsIn()     Returns the current record's "fe_us_in" value
 * @method string              getCoUsMo()     Returns the current record's "co_us_mo" value
 * @method timestamp           getFeUsMo()     Returns the current record's "fe_us_mo" value
 * @method string              getCoUsEl()     Returns the current record's "co_us_el" value
 * @method timestamp           getFeUsEl()     Returns the current record's "fe_us_el" value
 * @method string              getRevisado()   Returns the current record's "revisado" value
 * @method string              getTrasnfe()    Returns the current record's "trasnfe" value
 * @method string              getCoSucu()     Returns the current record's "co_sucu" value
 * @method string              getRowguid()    Returns the current record's "rowguid" value
 * @method string              getLogin()      Returns the current record's "login" value
 * @method string              getPassword()   Returns the current record's "password" value
 * @method string              getEmail()      Returns the current record's "email" value
 * @method string              getPswM()       Returns the current record's "psw_m" value
 * @method Doctrine_Collection getClientes()   Returns the current record's "Clientes" collection
 * @method Doctrine_Collection getCobros()     Returns the current record's "Cobros" collection
 * @method Doctrine_Collection getCotizC()     Returns the current record's "CotizC" collection
 * @method Doctrine_Collection getDevCli()     Returns the current record's "DevCli" collection
 * @method Doctrine_Collection getDocumCc()    Returns the current record's "DocumCc" collection
 * @method Doctrine_Collection getFactura()    Returns the current record's "Factura" collection
 * @method Doctrine_Collection getNotDep()     Returns the current record's "NotDep" collection
 * @method Doctrine_Collection getNotEnt()     Returns the current record's "NotEnt" collection
 * @method Doctrine_Collection getPedidos()    Returns the current record's "Pedidos" collection
 * @method Doctrine_Collection getPlavent()    Returns the current record's "Plavent" collection
 * @method Vendedor            setCoVen()      Sets the current record's "co_ven" value
 * @method Vendedor            setTipo()       Sets the current record's "tipo" value
 * @method Vendedor            setVenDes()     Sets the current record's "ven_des" value
 * @method Vendedor            setDisCen()     Sets the current record's "dis_cen" value
 * @method Vendedor            setCedula()     Sets the current record's "cedula" value
 * @method Vendedor            setDirec1()     Sets the current record's "direc1" value
 * @method Vendedor            setDirec2()     Sets the current record's "direc2" value
 * @method Vendedor            setTelefonos()  Sets the current record's "telefonos" value
 * @method Vendedor            setFechaReg()   Sets the current record's "fecha_reg" value
 * @method Vendedor            setCondic()     Sets the current record's "condic" value
 * @method Vendedor            setComision()   Sets the current record's "comision" value
 * @method Vendedor            setComen()      Sets the current record's "comen" value
 * @method Vendedor            setFunCob()     Sets the current record's "fun_cob" value
 * @method Vendedor            setFunVen()     Sets the current record's "fun_ven" value
 * @method Vendedor            setComisionv()  Sets the current record's "comisionv" value
 * @method Vendedor            setFacUltVe()   Sets the current record's "fac_ult_ve" value
 * @method Vendedor            setFecUltVe()   Sets the current record's "fec_ult_ve" value
 * @method Vendedor            setNetUltVe()   Sets the current record's "net_ult_ve" value
 * @method Vendedor            setCliUltVe()   Sets the current record's "cli_ult_ve" value
 * @method Vendedor            setCtaContab()  Sets the current record's "cta_contab" value
 * @method Vendedor            setCampo1()     Sets the current record's "campo1" value
 * @method Vendedor            setCampo2()     Sets the current record's "campo2" value
 * @method Vendedor            setCampo3()     Sets the current record's "campo3" value
 * @method Vendedor            setCampo4()     Sets the current record's "campo4" value
 * @method Vendedor            setCampo5()     Sets the current record's "campo5" value
 * @method Vendedor            setCampo6()     Sets the current record's "campo6" value
 * @method Vendedor            setCampo7()     Sets the current record's "campo7" value
 * @method Vendedor            setCampo8()     Sets the current record's "campo8" value
 * @method Vendedor            setCoUsIn()     Sets the current record's "co_us_in" value
 * @method Vendedor            setFeUsIn()     Sets the current record's "fe_us_in" value
 * @method Vendedor            setCoUsMo()     Sets the current record's "co_us_mo" value
 * @method Vendedor            setFeUsMo()     Sets the current record's "fe_us_mo" value
 * @method Vendedor            setCoUsEl()     Sets the current record's "co_us_el" value
 * @method Vendedor            setFeUsEl()     Sets the current record's "fe_us_el" value
 * @method Vendedor            setRevisado()   Sets the current record's "revisado" value
 * @method Vendedor            setTrasnfe()    Sets the current record's "trasnfe" value
 * @method Vendedor            setCoSucu()     Sets the current record's "co_sucu" value
 * @method Vendedor            setRowguid()    Sets the current record's "rowguid" value
 * @method Vendedor            setLogin()      Sets the current record's "login" value
 * @method Vendedor            setPassword()   Sets the current record's "password" value
 * @method Vendedor            setEmail()      Sets the current record's "email" value
 * @method Vendedor            setPswM()       Sets the current record's "psw_m" value
 * @method Vendedor            setClientes()   Sets the current record's "Clientes" collection
 * @method Vendedor            setCobros()     Sets the current record's "Cobros" collection
 * @method Vendedor            setCotizC()     Sets the current record's "CotizC" collection
 * @method Vendedor            setDevCli()     Sets the current record's "DevCli" collection
 * @method Vendedor            setDocumCc()    Sets the current record's "DocumCc" collection
 * @method Vendedor            setFactura()    Sets the current record's "Factura" collection
 * @method Vendedor            setNotDep()     Sets the current record's "NotDep" collection
 * @method Vendedor            setNotEnt()     Sets the current record's "NotEnt" collection
 * @method Vendedor            setPedidos()    Sets the current record's "Pedidos" collection
 * @method Vendedor            setPlavent()    Sets the current record's "Plavent" collection
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis Hernández
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseVendedor extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('vendedor');
        $this->hasColumn('co_ven', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('tipo', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('ven_des', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('dis_cen', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('cedula', 'string', 16, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('direc1', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('direc2', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('telefonos', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('fecha_reg', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(convert(varchar(10),getdate(),104))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('condic', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('comision', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('comen', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('fun_cob', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('fun_ven', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('comisionv', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('fac_ult_ve', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fec_ult_ve', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(convert(varchar(10),getdate(),104))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('net_ult_ve', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('cli_ult_ve', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('cta_contab', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('campo1', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo2', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo3', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo4', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo5', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo6', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo7', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo8', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('revisado', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('trasnfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_sucu', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('login', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('password', 'string', 50, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('email', 'string', 40, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 40,
             ));
        $this->hasColumn('psw_m', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Clientes', array(
             'local' => 'co_ven',
             'foreign' => 'co_ven'));

        $this->hasMany('Cobros', array(
             'local' => 'co_ven',
             'foreign' => 'co_ven'));

        $this->hasMany('CotizC', array(
             'local' => 'co_ven',
             'foreign' => 'co_ven'));

        $this->hasMany('DevCli', array(
             'local' => 'co_ven',
             'foreign' => 'co_ven'));

        $this->hasMany('DocumCc', array(
             'local' => 'co_ven',
             'foreign' => 'co_ven'));

        $this->hasMany('Factura', array(
             'local' => 'co_ven',
             'foreign' => 'co_ven'));

        $this->hasMany('NotDep', array(
             'local' => 'co_ven',
             'foreign' => 'co_ven'));

        $this->hasMany('NotEnt', array(
             'local' => 'co_ven',
             'foreign' => 'co_ven'));

        $this->hasMany('Pedidos', array(
             'local' => 'co_ven',
             'foreign' => 'co_ven'));

        $this->hasMany('Plavent', array(
             'local' => 'co_ven',
             'foreign' => 'co_ven'));
    }
}