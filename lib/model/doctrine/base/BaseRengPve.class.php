<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RengPve', 'profit');

/**
 * BaseRengPve
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $fact_num
 * @property integer $reng_num
 * @property string $dis_cen
 * @property string $tipo_doc
 * @property integer $reng_doc
 * @property integer $num_doc
 * @property string $co_art
 * @property string $co_alma
 * @property float $total_art
 * @property float $stotal_art
 * @property float $pendiente
 * @property string $uni_venta
 * @property float $prec_vta
 * @property string $porc_desc
 * @property string $tipo_imp
 * @property float $isv
 * @property float $reng_neto
 * @property float $cos_pro_un
 * @property float $ult_cos_un
 * @property float $ult_cos_om
 * @property float $cos_pro_om
 * @property float $total_dev
 * @property float $monto_dev
 * @property float $prec_vta2
 * @property boolean $anulado
 * @property string $des_art
 * @property boolean $seleccion
 * @property float $cant_imp
 * @property string $comentario
 * @property float $total_uni
 * @property float $mon_ilc
 * @property float $otros
 * @property string $nro_lote
 * @property timestamp $fec_lote
 * @property float $pendiente2
 * @property string $tipo_doc2
 * @property integer $reng_doc2
 * @property integer $num_doc2
 * @property string $co_alma2
 * @property string $rowguid
 * 
 * @method integer   getFactNum()    Returns the current record's "fact_num" value
 * @method integer   getRengNum()    Returns the current record's "reng_num" value
 * @method string    getDisCen()     Returns the current record's "dis_cen" value
 * @method string    getTipoDoc()    Returns the current record's "tipo_doc" value
 * @method integer   getRengDoc()    Returns the current record's "reng_doc" value
 * @method integer   getNumDoc()     Returns the current record's "num_doc" value
 * @method string    getCoArt()      Returns the current record's "co_art" value
 * @method string    getCoAlma()     Returns the current record's "co_alma" value
 * @method float     getTotalArt()   Returns the current record's "total_art" value
 * @method float     getStotalArt()  Returns the current record's "stotal_art" value
 * @method float     getPendiente()  Returns the current record's "pendiente" value
 * @method string    getUniVenta()   Returns the current record's "uni_venta" value
 * @method float     getPrecVta()    Returns the current record's "prec_vta" value
 * @method string    getPorcDesc()   Returns the current record's "porc_desc" value
 * @method string    getTipoImp()    Returns the current record's "tipo_imp" value
 * @method float     getIsv()        Returns the current record's "isv" value
 * @method float     getRengNeto()   Returns the current record's "reng_neto" value
 * @method float     getCosProUn()   Returns the current record's "cos_pro_un" value
 * @method float     getUltCosUn()   Returns the current record's "ult_cos_un" value
 * @method float     getUltCosOm()   Returns the current record's "ult_cos_om" value
 * @method float     getCosProOm()   Returns the current record's "cos_pro_om" value
 * @method float     getTotalDev()   Returns the current record's "total_dev" value
 * @method float     getMontoDev()   Returns the current record's "monto_dev" value
 * @method float     getPrecVta2()   Returns the current record's "prec_vta2" value
 * @method boolean   getAnulado()    Returns the current record's "anulado" value
 * @method string    getDesArt()     Returns the current record's "des_art" value
 * @method boolean   getSeleccion()  Returns the current record's "seleccion" value
 * @method float     getCantImp()    Returns the current record's "cant_imp" value
 * @method string    getComentario() Returns the current record's "comentario" value
 * @method float     getTotalUni()   Returns the current record's "total_uni" value
 * @method float     getMonIlc()     Returns the current record's "mon_ilc" value
 * @method float     getOtros()      Returns the current record's "otros" value
 * @method string    getNroLote()    Returns the current record's "nro_lote" value
 * @method timestamp getFecLote()    Returns the current record's "fec_lote" value
 * @method float     getPendiente2() Returns the current record's "pendiente2" value
 * @method string    getTipoDoc2()   Returns the current record's "tipo_doc2" value
 * @method integer   getRengDoc2()   Returns the current record's "reng_doc2" value
 * @method integer   getNumDoc2()    Returns the current record's "num_doc2" value
 * @method string    getCoAlma2()    Returns the current record's "co_alma2" value
 * @method string    getRowguid()    Returns the current record's "rowguid" value
 * @method RengPve   setFactNum()    Sets the current record's "fact_num" value
 * @method RengPve   setRengNum()    Sets the current record's "reng_num" value
 * @method RengPve   setDisCen()     Sets the current record's "dis_cen" value
 * @method RengPve   setTipoDoc()    Sets the current record's "tipo_doc" value
 * @method RengPve   setRengDoc()    Sets the current record's "reng_doc" value
 * @method RengPve   setNumDoc()     Sets the current record's "num_doc" value
 * @method RengPve   setCoArt()      Sets the current record's "co_art" value
 * @method RengPve   setCoAlma()     Sets the current record's "co_alma" value
 * @method RengPve   setTotalArt()   Sets the current record's "total_art" value
 * @method RengPve   setStotalArt()  Sets the current record's "stotal_art" value
 * @method RengPve   setPendiente()  Sets the current record's "pendiente" value
 * @method RengPve   setUniVenta()   Sets the current record's "uni_venta" value
 * @method RengPve   setPrecVta()    Sets the current record's "prec_vta" value
 * @method RengPve   setPorcDesc()   Sets the current record's "porc_desc" value
 * @method RengPve   setTipoImp()    Sets the current record's "tipo_imp" value
 * @method RengPve   setIsv()        Sets the current record's "isv" value
 * @method RengPve   setRengNeto()   Sets the current record's "reng_neto" value
 * @method RengPve   setCosProUn()   Sets the current record's "cos_pro_un" value
 * @method RengPve   setUltCosUn()   Sets the current record's "ult_cos_un" value
 * @method RengPve   setUltCosOm()   Sets the current record's "ult_cos_om" value
 * @method RengPve   setCosProOm()   Sets the current record's "cos_pro_om" value
 * @method RengPve   setTotalDev()   Sets the current record's "total_dev" value
 * @method RengPve   setMontoDev()   Sets the current record's "monto_dev" value
 * @method RengPve   setPrecVta2()   Sets the current record's "prec_vta2" value
 * @method RengPve   setAnulado()    Sets the current record's "anulado" value
 * @method RengPve   setDesArt()     Sets the current record's "des_art" value
 * @method RengPve   setSeleccion()  Sets the current record's "seleccion" value
 * @method RengPve   setCantImp()    Sets the current record's "cant_imp" value
 * @method RengPve   setComentario() Sets the current record's "comentario" value
 * @method RengPve   setTotalUni()   Sets the current record's "total_uni" value
 * @method RengPve   setMonIlc()     Sets the current record's "mon_ilc" value
 * @method RengPve   setOtros()      Sets the current record's "otros" value
 * @method RengPve   setNroLote()    Sets the current record's "nro_lote" value
 * @method RengPve   setFecLote()    Sets the current record's "fec_lote" value
 * @method RengPve   setPendiente2() Sets the current record's "pendiente2" value
 * @method RengPve   setTipoDoc2()   Sets the current record's "tipo_doc2" value
 * @method RengPve   setRengDoc2()   Sets the current record's "reng_doc2" value
 * @method RengPve   setNumDoc2()    Sets the current record's "num_doc2" value
 * @method RengPve   setCoAlma2()    Sets the current record's "co_alma2" value
 * @method RengPve   setRowguid()    Sets the current record's "rowguid" value
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRengPve extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reng_pve');
        $this->hasColumn('fact_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('reng_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('dis_cen', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('tipo_doc', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('reng_doc', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('num_doc', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('co_art', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('co_alma', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('total_art', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('stotal_art', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('pendiente', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('uni_venta', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('prec_vta', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('porc_desc', 'string', 15, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('tipo_imp', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('isv', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('reng_neto', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('cos_pro_un', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('ult_cos_un', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('ult_cos_om', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('cos_pro_om', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('total_dev', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('monto_dev', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('prec_vta2', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('anulado', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('des_art', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('seleccion', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('cant_imp', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('comentario', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('total_uni', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('mon_ilc', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('otros', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('nro_lote', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('fec_lote', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(convert(varchar(10),getdate(),104))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('pendiente2', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('tipo_doc2', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('reng_doc2', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('num_doc2', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('co_alma2', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}