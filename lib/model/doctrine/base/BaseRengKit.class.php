<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RengKit', 'profit');

/**
 * BaseRengKit
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $kit_num
 * @property integer $reng_num
 * @property string $co_art
 * @property timestamp $fec_emis
 * @property string $des_kit
 * @property string $uni_venta
 * @property decimal $total_art
 * @property string $rowguid
 * @property decimal $total_uni
 * @property string $nro_lote
 * @property timestamp $fec_lote
 * @property decimal $pendiente2
 * @property string $tipo_doc2
 * @property integer $reng_doc2
 * @property integer $num_doc2
 * @property decimal $aux01
 * @property string $aux02
 * @property Art $Art
 * 
 * @method integer   getKitNum()     Returns the current record's "kit_num" value
 * @method integer   getRengNum()    Returns the current record's "reng_num" value
 * @method string    getCoArt()      Returns the current record's "co_art" value
 * @method timestamp getFecEmis()    Returns the current record's "fec_emis" value
 * @method string    getDesKit()     Returns the current record's "des_kit" value
 * @method string    getUniVenta()   Returns the current record's "uni_venta" value
 * @method decimal   getTotalArt()   Returns the current record's "total_art" value
 * @method string    getRowguid()    Returns the current record's "rowguid" value
 * @method decimal   getTotalUni()   Returns the current record's "total_uni" value
 * @method string    getNroLote()    Returns the current record's "nro_lote" value
 * @method timestamp getFecLote()    Returns the current record's "fec_lote" value
 * @method decimal   getPendiente2() Returns the current record's "pendiente2" value
 * @method string    getTipoDoc2()   Returns the current record's "tipo_doc2" value
 * @method integer   getRengDoc2()   Returns the current record's "reng_doc2" value
 * @method integer   getNumDoc2()    Returns the current record's "num_doc2" value
 * @method decimal   getAux01()      Returns the current record's "aux01" value
 * @method string    getAux02()      Returns the current record's "aux02" value
 * @method Art       getArt()        Returns the current record's "Art" value
 * @method RengKit   setKitNum()     Sets the current record's "kit_num" value
 * @method RengKit   setRengNum()    Sets the current record's "reng_num" value
 * @method RengKit   setCoArt()      Sets the current record's "co_art" value
 * @method RengKit   setFecEmis()    Sets the current record's "fec_emis" value
 * @method RengKit   setDesKit()     Sets the current record's "des_kit" value
 * @method RengKit   setUniVenta()   Sets the current record's "uni_venta" value
 * @method RengKit   setTotalArt()   Sets the current record's "total_art" value
 * @method RengKit   setRowguid()    Sets the current record's "rowguid" value
 * @method RengKit   setTotalUni()   Sets the current record's "total_uni" value
 * @method RengKit   setNroLote()    Sets the current record's "nro_lote" value
 * @method RengKit   setFecLote()    Sets the current record's "fec_lote" value
 * @method RengKit   setPendiente2() Sets the current record's "pendiente2" value
 * @method RengKit   setTipoDoc2()   Sets the current record's "tipo_doc2" value
 * @method RengKit   setRengDoc2()   Sets the current record's "reng_doc2" value
 * @method RengKit   setNumDoc2()    Sets the current record's "num_doc2" value
 * @method RengKit   setAux01()      Sets the current record's "aux01" value
 * @method RengKit   setAux02()      Sets the current record's "aux02" value
 * @method RengKit   setArt()        Sets the current record's "Art" value
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRengKit extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reng_kit');
        $this->hasColumn('kit_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('reng_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('co_art', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('fec_emis', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(convert(varchar(10),getdate(),104))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('des_kit', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('uni_venta', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('total_art', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('total_uni', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('nro_lote', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('fec_lote', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(convert(varchar(10),getdate(),104))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('pendiente2', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('tipo_doc2', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('reng_doc2', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('num_doc2', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('aux01', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('aux02', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Art', array(
             'local' => 'co_art',
             'foreign' => 'co_art'));
    }
}