<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Zona', 'profit');

/**
 * BaseZona
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $co_zon
 * @property string $zon_des
 * @property string $dis_cen
 * @property string $campo1
 * @property string $campo2
 * @property string $campo3
 * @property string $campo4
 * @property string $co_us_in
 * @property timestamp $fe_us_in
 * @property string $co_us_mo
 * @property timestamp $fe_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_el
 * @property string $revisado
 * @property string $trasnfe
 * @property string $co_sucu
 * @property string $rowguid
 * @property Doctrine_Collection $Clientes
 * @property Doctrine_Collection $Prov
 * 
 * @method string              getCoZon()    Returns the current record's "co_zon" value
 * @method string              getZonDes()   Returns the current record's "zon_des" value
 * @method string              getDisCen()   Returns the current record's "dis_cen" value
 * @method string              getCampo1()   Returns the current record's "campo1" value
 * @method string              getCampo2()   Returns the current record's "campo2" value
 * @method string              getCampo3()   Returns the current record's "campo3" value
 * @method string              getCampo4()   Returns the current record's "campo4" value
 * @method string              getCoUsIn()   Returns the current record's "co_us_in" value
 * @method timestamp           getFeUsIn()   Returns the current record's "fe_us_in" value
 * @method string              getCoUsMo()   Returns the current record's "co_us_mo" value
 * @method timestamp           getFeUsMo()   Returns the current record's "fe_us_mo" value
 * @method string              getCoUsEl()   Returns the current record's "co_us_el" value
 * @method timestamp           getFeUsEl()   Returns the current record's "fe_us_el" value
 * @method string              getRevisado() Returns the current record's "revisado" value
 * @method string              getTrasnfe()  Returns the current record's "trasnfe" value
 * @method string              getCoSucu()   Returns the current record's "co_sucu" value
 * @method string              getRowguid()  Returns the current record's "rowguid" value
 * @method Doctrine_Collection getClientes() Returns the current record's "Clientes" collection
 * @method Doctrine_Collection getProv()     Returns the current record's "Prov" collection
 * @method Zona                setCoZon()    Sets the current record's "co_zon" value
 * @method Zona                setZonDes()   Sets the current record's "zon_des" value
 * @method Zona                setDisCen()   Sets the current record's "dis_cen" value
 * @method Zona                setCampo1()   Sets the current record's "campo1" value
 * @method Zona                setCampo2()   Sets the current record's "campo2" value
 * @method Zona                setCampo3()   Sets the current record's "campo3" value
 * @method Zona                setCampo4()   Sets the current record's "campo4" value
 * @method Zona                setCoUsIn()   Sets the current record's "co_us_in" value
 * @method Zona                setFeUsIn()   Sets the current record's "fe_us_in" value
 * @method Zona                setCoUsMo()   Sets the current record's "co_us_mo" value
 * @method Zona                setFeUsMo()   Sets the current record's "fe_us_mo" value
 * @method Zona                setCoUsEl()   Sets the current record's "co_us_el" value
 * @method Zona                setFeUsEl()   Sets the current record's "fe_us_el" value
 * @method Zona                setRevisado() Sets the current record's "revisado" value
 * @method Zona                setTrasnfe()  Sets the current record's "trasnfe" value
 * @method Zona                setCoSucu()   Sets the current record's "co_sucu" value
 * @method Zona                setRowguid()  Sets the current record's "rowguid" value
 * @method Zona                setClientes() Sets the current record's "Clientes" collection
 * @method Zona                setProv()     Sets the current record's "Prov" collection
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseZona extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('zona');
        $this->hasColumn('co_zon', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('zon_des', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('dis_cen', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('campo1', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo2', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo3', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo4', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('revisado', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('trasnfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_sucu', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Clientes', array(
             'local' => 'co_zon',
             'foreign' => 'co_zon'));

        $this->hasMany('Prov', array(
             'local' => 'co_zon',
             'foreign' => 'co_zon'));
    }
}