<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Bancos', 'profit');

/**
 * BaseBancos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $co_ban
 * @property string $des_ban
 * @property string $telefonos
 * @property string $campo1
 * @property string $campo2
 * @property string $campo3
 * @property string $campo4
 * @property string $co_us_in
 * @property timestamp $fe_us_in
 * @property string $co_us_mo
 * @property timestamp $fe_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_el
 * @property string $revisado
 * @property string $trasnfe
 * @property string $co_sucu
 * @property string $rowguid
 * @property float $plazo1
 * @property float $plazo2
 * @property float $plazo3
 * @property float $plazo4
 * @property timestamp $row_id
 * @property Doctrine_Collection $Cuentas
 * @property Doctrine_Collection $ParConc
 * 
 * @method string              getCoBan()     Returns the current record's "co_ban" value
 * @method string              getDesBan()    Returns the current record's "des_ban" value
 * @method string              getTelefonos() Returns the current record's "telefonos" value
 * @method string              getCampo1()    Returns the current record's "campo1" value
 * @method string              getCampo2()    Returns the current record's "campo2" value
 * @method string              getCampo3()    Returns the current record's "campo3" value
 * @method string              getCampo4()    Returns the current record's "campo4" value
 * @method string              getCoUsIn()    Returns the current record's "co_us_in" value
 * @method timestamp           getFeUsIn()    Returns the current record's "fe_us_in" value
 * @method string              getCoUsMo()    Returns the current record's "co_us_mo" value
 * @method timestamp           getFeUsMo()    Returns the current record's "fe_us_mo" value
 * @method string              getCoUsEl()    Returns the current record's "co_us_el" value
 * @method timestamp           getFeUsEl()    Returns the current record's "fe_us_el" value
 * @method string              getRevisado()  Returns the current record's "revisado" value
 * @method string              getTrasnfe()   Returns the current record's "trasnfe" value
 * @method string              getCoSucu()    Returns the current record's "co_sucu" value
 * @method string              getRowguid()   Returns the current record's "rowguid" value
 * @method float               getPlazo1()    Returns the current record's "plazo1" value
 * @method float               getPlazo2()    Returns the current record's "plazo2" value
 * @method float               getPlazo3()    Returns the current record's "plazo3" value
 * @method float               getPlazo4()    Returns the current record's "plazo4" value
 * @method timestamp           getRowId()     Returns the current record's "row_id" value
 * @method Doctrine_Collection getCuentas()   Returns the current record's "Cuentas" collection
 * @method Doctrine_Collection getParConc()   Returns the current record's "ParConc" collection
 * @method Bancos              setCoBan()     Sets the current record's "co_ban" value
 * @method Bancos              setDesBan()    Sets the current record's "des_ban" value
 * @method Bancos              setTelefonos() Sets the current record's "telefonos" value
 * @method Bancos              setCampo1()    Sets the current record's "campo1" value
 * @method Bancos              setCampo2()    Sets the current record's "campo2" value
 * @method Bancos              setCampo3()    Sets the current record's "campo3" value
 * @method Bancos              setCampo4()    Sets the current record's "campo4" value
 * @method Bancos              setCoUsIn()    Sets the current record's "co_us_in" value
 * @method Bancos              setFeUsIn()    Sets the current record's "fe_us_in" value
 * @method Bancos              setCoUsMo()    Sets the current record's "co_us_mo" value
 * @method Bancos              setFeUsMo()    Sets the current record's "fe_us_mo" value
 * @method Bancos              setCoUsEl()    Sets the current record's "co_us_el" value
 * @method Bancos              setFeUsEl()    Sets the current record's "fe_us_el" value
 * @method Bancos              setRevisado()  Sets the current record's "revisado" value
 * @method Bancos              setTrasnfe()   Sets the current record's "trasnfe" value
 * @method Bancos              setCoSucu()    Sets the current record's "co_sucu" value
 * @method Bancos              setRowguid()   Sets the current record's "rowguid" value
 * @method Bancos              setPlazo1()    Sets the current record's "plazo1" value
 * @method Bancos              setPlazo2()    Sets the current record's "plazo2" value
 * @method Bancos              setPlazo3()    Sets the current record's "plazo3" value
 * @method Bancos              setPlazo4()    Sets the current record's "plazo4" value
 * @method Bancos              setRowId()     Sets the current record's "row_id" value
 * @method Bancos              setCuentas()   Sets the current record's "Cuentas" collection
 * @method Bancos              setParConc()   Sets the current record's "ParConc" collection
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseBancos extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('bancos');
        $this->hasColumn('co_ban', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('des_ban', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('telefonos', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo1', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo2', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo3', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo4', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('revisado', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('trasnfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_sucu', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('plazo1', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('plazo2', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('plazo3', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('plazo4', 'float', 20, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('row_id', 'timestamp', 8, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Cuentas', array(
             'local' => 'co_ban',
             'foreign' => 'co_banco'));

        $this->hasMany('ParConc', array(
             'local' => 'co_ban',
             'foreign' => 'co_ban'));
    }
}