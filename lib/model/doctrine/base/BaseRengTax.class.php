<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RengTax', 'profit');

/**
 * BaseRengTax
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $tax_num
 * @property integer $reng_num
 * @property string $tax_id
 * @property decimal $tasa1
 * @property decimal $tasa2
 * @property decimal $tasa3
 * @property boolean $formula
 * @property decimal $limite
 * @property decimal $porc1
 * @property decimal $porc2
 * @property string $rowguid
 * @property TaxEnc $TaxEnc
 * @property Tax $Tax
 * 
 * @method integer getTaxNum()   Returns the current record's "tax_num" value
 * @method integer getRengNum()  Returns the current record's "reng_num" value
 * @method string  getTaxId()    Returns the current record's "tax_id" value
 * @method decimal getTasa1()    Returns the current record's "tasa1" value
 * @method decimal getTasa2()    Returns the current record's "tasa2" value
 * @method decimal getTasa3()    Returns the current record's "tasa3" value
 * @method boolean getFormula()  Returns the current record's "formula" value
 * @method decimal getLimite()   Returns the current record's "limite" value
 * @method decimal getPorc1()    Returns the current record's "porc1" value
 * @method decimal getPorc2()    Returns the current record's "porc2" value
 * @method string  getRowguid()  Returns the current record's "rowguid" value
 * @method TaxEnc  getTaxEnc()   Returns the current record's "TaxEnc" value
 * @method Tax     getTax()      Returns the current record's "Tax" value
 * @method RengTax setTaxNum()   Sets the current record's "tax_num" value
 * @method RengTax setRengNum()  Sets the current record's "reng_num" value
 * @method RengTax setTaxId()    Sets the current record's "tax_id" value
 * @method RengTax setTasa1()    Sets the current record's "tasa1" value
 * @method RengTax setTasa2()    Sets the current record's "tasa2" value
 * @method RengTax setTasa3()    Sets the current record's "tasa3" value
 * @method RengTax setFormula()  Sets the current record's "formula" value
 * @method RengTax setLimite()   Sets the current record's "limite" value
 * @method RengTax setPorc1()    Sets the current record's "porc1" value
 * @method RengTax setPorc2()    Sets the current record's "porc2" value
 * @method RengTax setRowguid()  Sets the current record's "rowguid" value
 * @method RengTax setTaxEnc()   Sets the current record's "TaxEnc" value
 * @method RengTax setTax()      Sets the current record's "Tax" value
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRengTax extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('Reng_tax');
        $this->hasColumn('tax_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('reng_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('tax_id', 'string', 8, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('tasa1', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('tasa2', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('tasa3', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('formula', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('limite', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('porc1', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('porc2', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('TaxEnc', array(
             'local' => 'tax_num',
             'foreign' => 'tax_num'));

        $this->hasOne('Tax', array(
             'local' => 'tax_id',
             'foreign' => 'tax_id'));
    }
}