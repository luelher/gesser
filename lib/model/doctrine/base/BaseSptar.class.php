<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Sptar', 'profit');

/**
 * BaseSptar
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $co_tar
 * @property string $tar_des
 * @property string $campo1
 * @property string $campo2
 * @property string $campo3
 * @property string $campo4
 * @property boolean $atributo1
 * @property string $vatributo1
 * @property boolean $atributo2
 * @property string $vatributo2
 * @property boolean $atributo3
 * @property string $vatributo3
 * @property boolean $atributo4
 * @property string $vatributo4
 * @property boolean $atributo5
 * @property string $vatributo5
 * @property boolean $atributo6
 * @property string $vatributo6
 * @property string $co_us_in
 * @property string $co_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_in
 * @property timestamp $fe_us_mo
 * @property timestamp $fe_us_el
 * @property string $rowguid
 * @property string $co_sucu
 * @property boolean $man_mat
 * @property string $revisado
 * @property string $trasnfe
 * @property Doctrine_Collection $RengAtb
 * @property Doctrine_Collection $RengMce
 * @property Doctrine_Collection $RengTar
 * 
 * @method string              getCoTar()      Returns the current record's "co_tar" value
 * @method string              getTarDes()     Returns the current record's "tar_des" value
 * @method string              getCampo1()     Returns the current record's "campo1" value
 * @method string              getCampo2()     Returns the current record's "campo2" value
 * @method string              getCampo3()     Returns the current record's "campo3" value
 * @method string              getCampo4()     Returns the current record's "campo4" value
 * @method boolean             getAtributo1()  Returns the current record's "atributo1" value
 * @method string              getVatributo1() Returns the current record's "vatributo1" value
 * @method boolean             getAtributo2()  Returns the current record's "atributo2" value
 * @method string              getVatributo2() Returns the current record's "vatributo2" value
 * @method boolean             getAtributo3()  Returns the current record's "atributo3" value
 * @method string              getVatributo3() Returns the current record's "vatributo3" value
 * @method boolean             getAtributo4()  Returns the current record's "atributo4" value
 * @method string              getVatributo4() Returns the current record's "vatributo4" value
 * @method boolean             getAtributo5()  Returns the current record's "atributo5" value
 * @method string              getVatributo5() Returns the current record's "vatributo5" value
 * @method boolean             getAtributo6()  Returns the current record's "atributo6" value
 * @method string              getVatributo6() Returns the current record's "vatributo6" value
 * @method string              getCoUsIn()     Returns the current record's "co_us_in" value
 * @method string              getCoUsMo()     Returns the current record's "co_us_mo" value
 * @method string              getCoUsEl()     Returns the current record's "co_us_el" value
 * @method timestamp           getFeUsIn()     Returns the current record's "fe_us_in" value
 * @method timestamp           getFeUsMo()     Returns the current record's "fe_us_mo" value
 * @method timestamp           getFeUsEl()     Returns the current record's "fe_us_el" value
 * @method string              getRowguid()    Returns the current record's "rowguid" value
 * @method string              getCoSucu()     Returns the current record's "co_sucu" value
 * @method boolean             getManMat()     Returns the current record's "man_mat" value
 * @method string              getRevisado()   Returns the current record's "revisado" value
 * @method string              getTrasnfe()    Returns the current record's "trasnfe" value
 * @method Doctrine_Collection getRengAtb()    Returns the current record's "RengAtb" collection
 * @method Doctrine_Collection getRengMce()    Returns the current record's "RengMce" collection
 * @method Doctrine_Collection getRengTar()    Returns the current record's "RengTar" collection
 * @method Sptar               setCoTar()      Sets the current record's "co_tar" value
 * @method Sptar               setTarDes()     Sets the current record's "tar_des" value
 * @method Sptar               setCampo1()     Sets the current record's "campo1" value
 * @method Sptar               setCampo2()     Sets the current record's "campo2" value
 * @method Sptar               setCampo3()     Sets the current record's "campo3" value
 * @method Sptar               setCampo4()     Sets the current record's "campo4" value
 * @method Sptar               setAtributo1()  Sets the current record's "atributo1" value
 * @method Sptar               setVatributo1() Sets the current record's "vatributo1" value
 * @method Sptar               setAtributo2()  Sets the current record's "atributo2" value
 * @method Sptar               setVatributo2() Sets the current record's "vatributo2" value
 * @method Sptar               setAtributo3()  Sets the current record's "atributo3" value
 * @method Sptar               setVatributo3() Sets the current record's "vatributo3" value
 * @method Sptar               setAtributo4()  Sets the current record's "atributo4" value
 * @method Sptar               setVatributo4() Sets the current record's "vatributo4" value
 * @method Sptar               setAtributo5()  Sets the current record's "atributo5" value
 * @method Sptar               setVatributo5() Sets the current record's "vatributo5" value
 * @method Sptar               setAtributo6()  Sets the current record's "atributo6" value
 * @method Sptar               setVatributo6() Sets the current record's "vatributo6" value
 * @method Sptar               setCoUsIn()     Sets the current record's "co_us_in" value
 * @method Sptar               setCoUsMo()     Sets the current record's "co_us_mo" value
 * @method Sptar               setCoUsEl()     Sets the current record's "co_us_el" value
 * @method Sptar               setFeUsIn()     Sets the current record's "fe_us_in" value
 * @method Sptar               setFeUsMo()     Sets the current record's "fe_us_mo" value
 * @method Sptar               setFeUsEl()     Sets the current record's "fe_us_el" value
 * @method Sptar               setRowguid()    Sets the current record's "rowguid" value
 * @method Sptar               setCoSucu()     Sets the current record's "co_sucu" value
 * @method Sptar               setManMat()     Sets the current record's "man_mat" value
 * @method Sptar               setRevisado()   Sets the current record's "revisado" value
 * @method Sptar               setTrasnfe()    Sets the current record's "trasnfe" value
 * @method Sptar               setRengAtb()    Sets the current record's "RengAtb" collection
 * @method Sptar               setRengMce()    Sets the current record's "RengMce" collection
 * @method Sptar               setRengTar()    Sets the current record's "RengTar" collection
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSptar extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sptar');
        $this->hasColumn('co_tar', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('tar_des', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(\' \')',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo1', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo2', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo3', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('campo4', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('atributo1', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('vatributo1', 'string', 15, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(\' \')',
             'primary' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('atributo2', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('vatributo2', 'string', 15, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(\' \')',
             'primary' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('atributo3', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('vatributo3', 'string', 15, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(\' \')',
             'primary' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('atributo4', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('vatributo4', 'string', 15, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(\' \')',
             'primary' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('atributo5', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('vatributo5', 'string', 15, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(\' \')',
             'primary' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('atributo6', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('vatributo6', 'string', 15, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(\' \')',
             'primary' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(\' \')',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(\' \')',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(\' \')',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('co_sucu', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('man_mat', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('revisado', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('trasnfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('RengAtb', array(
             'local' => 'co_tar',
             'foreign' => 'co_tar'));

        $this->hasMany('RengMce', array(
             'local' => 'co_tar',
             'foreign' => 'co_tar'));

        $this->hasMany('RengTar', array(
             'local' => 'co_tar',
             'foreign' => 'co_tar'));
    }
}