<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Cheques', 'profit');

/**
 * BaseCheques
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $co_cheq
 * @property string $co_chra
 * @property string $status
 * @property decimal $monto
 * @property string $descrip
 * @property timestamp $fec_emis
 * @property timestamp $fec_ent
 * @property string $entreg_a
 * @property string $coment
 * @property string $co_us_in
 * @property timestamp $fe_us_in
 * @property string $co_us_mo
 * @property timestamp $fe_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_el
 * @property integer $mov_num
 * @property string $rowguid
 * @property Chequeras $Chequeras
 * 
 * @method string    getCoCheq()    Returns the current record's "co_cheq" value
 * @method string    getCoChra()    Returns the current record's "co_chra" value
 * @method string    getStatus()    Returns the current record's "status" value
 * @method decimal   getMonto()     Returns the current record's "monto" value
 * @method string    getDescrip()   Returns the current record's "descrip" value
 * @method timestamp getFecEmis()   Returns the current record's "fec_emis" value
 * @method timestamp getFecEnt()    Returns the current record's "fec_ent" value
 * @method string    getEntregA()   Returns the current record's "entreg_a" value
 * @method string    getComent()    Returns the current record's "coment" value
 * @method string    getCoUsIn()    Returns the current record's "co_us_in" value
 * @method timestamp getFeUsIn()    Returns the current record's "fe_us_in" value
 * @method string    getCoUsMo()    Returns the current record's "co_us_mo" value
 * @method timestamp getFeUsMo()    Returns the current record's "fe_us_mo" value
 * @method string    getCoUsEl()    Returns the current record's "co_us_el" value
 * @method timestamp getFeUsEl()    Returns the current record's "fe_us_el" value
 * @method integer   getMovNum()    Returns the current record's "mov_num" value
 * @method string    getRowguid()   Returns the current record's "rowguid" value
 * @method Chequeras getChequeras() Returns the current record's "Chequeras" value
 * @method Cheques   setCoCheq()    Sets the current record's "co_cheq" value
 * @method Cheques   setCoChra()    Sets the current record's "co_chra" value
 * @method Cheques   setStatus()    Sets the current record's "status" value
 * @method Cheques   setMonto()     Sets the current record's "monto" value
 * @method Cheques   setDescrip()   Sets the current record's "descrip" value
 * @method Cheques   setFecEmis()   Sets the current record's "fec_emis" value
 * @method Cheques   setFecEnt()    Sets the current record's "fec_ent" value
 * @method Cheques   setEntregA()   Sets the current record's "entreg_a" value
 * @method Cheques   setComent()    Sets the current record's "coment" value
 * @method Cheques   setCoUsIn()    Sets the current record's "co_us_in" value
 * @method Cheques   setFeUsIn()    Sets the current record's "fe_us_in" value
 * @method Cheques   setCoUsMo()    Sets the current record's "co_us_mo" value
 * @method Cheques   setFeUsMo()    Sets the current record's "fe_us_mo" value
 * @method Cheques   setCoUsEl()    Sets the current record's "co_us_el" value
 * @method Cheques   setFeUsEl()    Sets the current record's "fe_us_el" value
 * @method Cheques   setMovNum()    Sets the current record's "mov_num" value
 * @method Cheques   setRowguid()   Sets the current record's "rowguid" value
 * @method Cheques   setChequeras() Sets the current record's "Chequeras" value
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCheques extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cheques');
        $this->hasColumn('co_cheq', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('co_chra', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('status', 'string', 3, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('monto', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('descrip', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('fec_emis', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('fec_ent', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => false,
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('entreg_a', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('coment', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('mov_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Chequeras', array(
             'local' => 'co_chra',
             'foreign' => 'co_chra'));
    }
}