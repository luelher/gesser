<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RengFci', 'profit');

/**
 * BaseRengFci
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $imp_num
 * @property integer $reng_num
 * @property integer $fact_num
 * @property float $tot_neto
 * @property string $descrip
 * @property float $monto_dis
 * @property string $rowguid
 * @property decimal $aux01
 * @property string $aux02
 * 
 * @method integer getImpNum()    Returns the current record's "imp_num" value
 * @method integer getRengNum()   Returns the current record's "reng_num" value
 * @method integer getFactNum()   Returns the current record's "fact_num" value
 * @method float   getTotNeto()   Returns the current record's "tot_neto" value
 * @method string  getDescrip()   Returns the current record's "descrip" value
 * @method float   getMontoDis()  Returns the current record's "monto_dis" value
 * @method string  getRowguid()   Returns the current record's "rowguid" value
 * @method decimal getAux01()     Returns the current record's "aux01" value
 * @method string  getAux02()     Returns the current record's "aux02" value
 * @method RengFci setImpNum()    Sets the current record's "imp_num" value
 * @method RengFci setRengNum()   Sets the current record's "reng_num" value
 * @method RengFci setFactNum()   Sets the current record's "fact_num" value
 * @method RengFci setTotNeto()   Sets the current record's "tot_neto" value
 * @method RengFci setDescrip()   Sets the current record's "descrip" value
 * @method RengFci setMontoDis()  Sets the current record's "monto_dis" value
 * @method RengFci setRowguid()   Sets the current record's "rowguid" value
 * @method RengFci setAux01()     Sets the current record's "aux01" value
 * @method RengFci setAux02()     Sets the current record's "aux02" value
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRengFci extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reng_fci');
        $this->hasColumn('imp_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('reng_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fact_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('tot_neto', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('descrip', 'string', 60, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('monto_dis', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('aux01', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('aux02', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}