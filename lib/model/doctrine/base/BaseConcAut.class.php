<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ConcAut', 'profit');

/**
 * BaseConcAut
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $cod_cta
 * @property integer $mes
 * @property integer $ano
 * @property timestamp $fec_load
 * @property string $status
 * @property string $descrip
 * @property string $archivo
 * @property string $rowguid
 * @property decimal $saldo_ec
 * @property string $revisado
 * @property string $trasnfe
 * @property string $co_us_in
 * @property timestamp $fe_us_in
 * @property string $co_us_mo
 * @property timestamp $fe_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_el
 * @property Cuentas $Cuentas
 * @property Doctrine_Collection $RengCon
 * @property Doctrine_Collection $RengCon_2
 * @property Doctrine_Collection $RengCon_3
 * 
 * @method string              getCodCta()    Returns the current record's "cod_cta" value
 * @method integer             getMes()       Returns the current record's "mes" value
 * @method integer             getAno()       Returns the current record's "ano" value
 * @method timestamp           getFecLoad()   Returns the current record's "fec_load" value
 * @method string              getStatus()    Returns the current record's "status" value
 * @method string              getDescrip()   Returns the current record's "descrip" value
 * @method string              getArchivo()   Returns the current record's "archivo" value
 * @method string              getRowguid()   Returns the current record's "rowguid" value
 * @method decimal             getSaldoEc()   Returns the current record's "saldo_ec" value
 * @method string              getRevisado()  Returns the current record's "revisado" value
 * @method string              getTrasnfe()   Returns the current record's "trasnfe" value
 * @method string              getCoUsIn()    Returns the current record's "co_us_in" value
 * @method timestamp           getFeUsIn()    Returns the current record's "fe_us_in" value
 * @method string              getCoUsMo()    Returns the current record's "co_us_mo" value
 * @method timestamp           getFeUsMo()    Returns the current record's "fe_us_mo" value
 * @method string              getCoUsEl()    Returns the current record's "co_us_el" value
 * @method timestamp           getFeUsEl()    Returns the current record's "fe_us_el" value
 * @method Cuentas             getCuentas()   Returns the current record's "Cuentas" value
 * @method Doctrine_Collection getRengCon()   Returns the current record's "RengCon" collection
 * @method Doctrine_Collection getRengCon2()  Returns the current record's "RengCon_2" collection
 * @method Doctrine_Collection getRengCon3()  Returns the current record's "RengCon_3" collection
 * @method ConcAut             setCodCta()    Sets the current record's "cod_cta" value
 * @method ConcAut             setMes()       Sets the current record's "mes" value
 * @method ConcAut             setAno()       Sets the current record's "ano" value
 * @method ConcAut             setFecLoad()   Sets the current record's "fec_load" value
 * @method ConcAut             setStatus()    Sets the current record's "status" value
 * @method ConcAut             setDescrip()   Sets the current record's "descrip" value
 * @method ConcAut             setArchivo()   Sets the current record's "archivo" value
 * @method ConcAut             setRowguid()   Sets the current record's "rowguid" value
 * @method ConcAut             setSaldoEc()   Sets the current record's "saldo_ec" value
 * @method ConcAut             setRevisado()  Sets the current record's "revisado" value
 * @method ConcAut             setTrasnfe()   Sets the current record's "trasnfe" value
 * @method ConcAut             setCoUsIn()    Sets the current record's "co_us_in" value
 * @method ConcAut             setFeUsIn()    Sets the current record's "fe_us_in" value
 * @method ConcAut             setCoUsMo()    Sets the current record's "co_us_mo" value
 * @method ConcAut             setFeUsMo()    Sets the current record's "fe_us_mo" value
 * @method ConcAut             setCoUsEl()    Sets the current record's "co_us_el" value
 * @method ConcAut             setFeUsEl()    Sets the current record's "fe_us_el" value
 * @method ConcAut             setCuentas()   Sets the current record's "Cuentas" value
 * @method ConcAut             setRengCon()   Sets the current record's "RengCon" collection
 * @method ConcAut             setRengCon2()  Sets the current record's "RengCon_2" collection
 * @method ConcAut             setRengCon3()  Sets the current record's "RengCon_3" collection
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseConcAut extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('conc_aut');
        $this->hasColumn('cod_cta', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('mes', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('ano', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fec_load', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(convert(varchar(10),getdate(),104))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('status', 'string', 3, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('descrip', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('archivo', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('saldo_ec', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('revisado', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('trasnfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Cuentas', array(
             'local' => 'cod_cta',
             'foreign' => 'cod_cta'));

        $this->hasMany('RengCon', array(
             'local' => 'cod_cta',
             'foreign' => 'cod_cta'));

        $this->hasMany('RengCon as RengCon_2', array(
             'local' => 'mes',
             'foreign' => 'mes'));

        $this->hasMany('RengCon as RengCon_3', array(
             'local' => 'ano',
             'foreign' => 'ano'));
    }
}