<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Cobros', 'profit');

/**
 * BaseCobros
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $cob_num
 * @property string $recibo
 * @property string $co_cli
 * @property string $co_ven
 * @property timestamp $fec_cob
 * @property boolean $anulado
 * @property decimal $monto
 * @property decimal $dppago
 * @property decimal $mont_ncr
 * @property integer $ncr
 * @property decimal $tcomi_porc
 * @property decimal $tcomi_line
 * @property decimal $tcomi_art
 * @property decimal $tcomi_conc
 * @property timestamp $feccom
 * @property decimal $tasa
 * @property string $moneda
 * @property integer $numcom
 * @property string $dis_cen
 * @property string $campo1
 * @property string $campo2
 * @property string $campo3
 * @property string $campo4
 * @property string $campo5
 * @property string $campo6
 * @property string $campo7
 * @property string $campo8
 * @property string $co_us_in
 * @property timestamp $fe_us_in
 * @property string $co_us_mo
 * @property timestamp $fe_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_el
 * @property boolean $recargo
 * @property integer $adel_num
 * @property string $revisado
 * @property string $trasnfe
 * @property string $co_sucu
 * @property string $rowguid
 * @property string $descrip
 * @property integer $num_dev
 * @property boolean $devdinero
 * @property integer $num_turno
 * @property decimal $aux01
 * @property string $aux02
 * @property string $origen
 * @property string $origen_d
 * @property Clientes $Clientes
 * @property Vendedor $Vendedor
 * @property Moneda $Moneda
 * @property Almacen $Almacen
 * 
 * @method integer   getCobNum()     Returns the current record's "cob_num" value
 * @method string    getRecibo()     Returns the current record's "recibo" value
 * @method string    getCoCli()      Returns the current record's "co_cli" value
 * @method string    getCoVen()      Returns the current record's "co_ven" value
 * @method timestamp getFecCob()     Returns the current record's "fec_cob" value
 * @method boolean   getAnulado()    Returns the current record's "anulado" value
 * @method decimal   getMonto()      Returns the current record's "monto" value
 * @method decimal   getDppago()     Returns the current record's "dppago" value
 * @method decimal   getMontNcr()    Returns the current record's "mont_ncr" value
 * @method integer   getNcr()        Returns the current record's "ncr" value
 * @method decimal   getTcomiPorc()  Returns the current record's "tcomi_porc" value
 * @method decimal   getTcomiLine()  Returns the current record's "tcomi_line" value
 * @method decimal   getTcomiArt()   Returns the current record's "tcomi_art" value
 * @method decimal   getTcomiConc()  Returns the current record's "tcomi_conc" value
 * @method timestamp getFeccom()     Returns the current record's "feccom" value
 * @method decimal   getTasa()       Returns the current record's "tasa" value
 * @method string    getMoneda()     Returns the current record's "moneda" value
 * @method integer   getNumcom()     Returns the current record's "numcom" value
 * @method string    getDisCen()     Returns the current record's "dis_cen" value
 * @method string    getCampo1()     Returns the current record's "campo1" value
 * @method string    getCampo2()     Returns the current record's "campo2" value
 * @method string    getCampo3()     Returns the current record's "campo3" value
 * @method string    getCampo4()     Returns the current record's "campo4" value
 * @method string    getCampo5()     Returns the current record's "campo5" value
 * @method string    getCampo6()     Returns the current record's "campo6" value
 * @method string    getCampo7()     Returns the current record's "campo7" value
 * @method string    getCampo8()     Returns the current record's "campo8" value
 * @method string    getCoUsIn()     Returns the current record's "co_us_in" value
 * @method timestamp getFeUsIn()     Returns the current record's "fe_us_in" value
 * @method string    getCoUsMo()     Returns the current record's "co_us_mo" value
 * @method timestamp getFeUsMo()     Returns the current record's "fe_us_mo" value
 * @method string    getCoUsEl()     Returns the current record's "co_us_el" value
 * @method timestamp getFeUsEl()     Returns the current record's "fe_us_el" value
 * @method boolean   getRecargo()    Returns the current record's "recargo" value
 * @method integer   getAdelNum()    Returns the current record's "adel_num" value
 * @method string    getRevisado()   Returns the current record's "revisado" value
 * @method string    getTrasnfe()    Returns the current record's "trasnfe" value
 * @method string    getCoSucu()     Returns the current record's "co_sucu" value
 * @method string    getRowguid()    Returns the current record's "rowguid" value
 * @method string    getDescrip()    Returns the current record's "descrip" value
 * @method integer   getNumDev()     Returns the current record's "num_dev" value
 * @method boolean   getDevdinero()  Returns the current record's "devdinero" value
 * @method integer   getNumTurno()   Returns the current record's "num_turno" value
 * @method decimal   getAux01()      Returns the current record's "aux01" value
 * @method string    getAux02()      Returns the current record's "aux02" value
 * @method string    getOrigen()     Returns the current record's "origen" value
 * @method string    getOrigenD()    Returns the current record's "origen_d" value
 * @method Clientes  getClientes()   Returns the current record's "Clientes" value
 * @method Vendedor  getVendedor()   Returns the current record's "Vendedor" value
 * @method Moneda    getMoneda()     Returns the current record's "Moneda" value
 * @method Almacen   getAlmacen()    Returns the current record's "Almacen" value
 * @method Cobros    setCobNum()     Sets the current record's "cob_num" value
 * @method Cobros    setRecibo()     Sets the current record's "recibo" value
 * @method Cobros    setCoCli()      Sets the current record's "co_cli" value
 * @method Cobros    setCoVen()      Sets the current record's "co_ven" value
 * @method Cobros    setFecCob()     Sets the current record's "fec_cob" value
 * @method Cobros    setAnulado()    Sets the current record's "anulado" value
 * @method Cobros    setMonto()      Sets the current record's "monto" value
 * @method Cobros    setDppago()     Sets the current record's "dppago" value
 * @method Cobros    setMontNcr()    Sets the current record's "mont_ncr" value
 * @method Cobros    setNcr()        Sets the current record's "ncr" value
 * @method Cobros    setTcomiPorc()  Sets the current record's "tcomi_porc" value
 * @method Cobros    setTcomiLine()  Sets the current record's "tcomi_line" value
 * @method Cobros    setTcomiArt()   Sets the current record's "tcomi_art" value
 * @method Cobros    setTcomiConc()  Sets the current record's "tcomi_conc" value
 * @method Cobros    setFeccom()     Sets the current record's "feccom" value
 * @method Cobros    setTasa()       Sets the current record's "tasa" value
 * @method Cobros    setMoneda()     Sets the current record's "moneda" value
 * @method Cobros    setNumcom()     Sets the current record's "numcom" value
 * @method Cobros    setDisCen()     Sets the current record's "dis_cen" value
 * @method Cobros    setCampo1()     Sets the current record's "campo1" value
 * @method Cobros    setCampo2()     Sets the current record's "campo2" value
 * @method Cobros    setCampo3()     Sets the current record's "campo3" value
 * @method Cobros    setCampo4()     Sets the current record's "campo4" value
 * @method Cobros    setCampo5()     Sets the current record's "campo5" value
 * @method Cobros    setCampo6()     Sets the current record's "campo6" value
 * @method Cobros    setCampo7()     Sets the current record's "campo7" value
 * @method Cobros    setCampo8()     Sets the current record's "campo8" value
 * @method Cobros    setCoUsIn()     Sets the current record's "co_us_in" value
 * @method Cobros    setFeUsIn()     Sets the current record's "fe_us_in" value
 * @method Cobros    setCoUsMo()     Sets the current record's "co_us_mo" value
 * @method Cobros    setFeUsMo()     Sets the current record's "fe_us_mo" value
 * @method Cobros    setCoUsEl()     Sets the current record's "co_us_el" value
 * @method Cobros    setFeUsEl()     Sets the current record's "fe_us_el" value
 * @method Cobros    setRecargo()    Sets the current record's "recargo" value
 * @method Cobros    setAdelNum()    Sets the current record's "adel_num" value
 * @method Cobros    setRevisado()   Sets the current record's "revisado" value
 * @method Cobros    setTrasnfe()    Sets the current record's "trasnfe" value
 * @method Cobros    setCoSucu()     Sets the current record's "co_sucu" value
 * @method Cobros    setRowguid()    Sets the current record's "rowguid" value
 * @method Cobros    setDescrip()    Sets the current record's "descrip" value
 * @method Cobros    setNumDev()     Sets the current record's "num_dev" value
 * @method Cobros    setDevdinero()  Sets the current record's "devdinero" value
 * @method Cobros    setNumTurno()   Sets the current record's "num_turno" value
 * @method Cobros    setAux01()      Sets the current record's "aux01" value
 * @method Cobros    setAux02()      Sets the current record's "aux02" value
 * @method Cobros    setOrigen()     Sets the current record's "origen" value
 * @method Cobros    setOrigenD()    Sets the current record's "origen_d" value
 * @method Cobros    setClientes()   Sets the current record's "Clientes" value
 * @method Cobros    setVendedor()   Sets the current record's "Vendedor" value
 * @method Cobros    setMoneda()     Sets the current record's "Moneda" value
 * @method Cobros    setAlmacen()    Sets the current record's "Almacen" value
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis Hern√°ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCobros extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cobros');
        $this->hasColumn('cob_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('recibo', 'string', 15, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 15,
             ));
        $this->hasColumn('co_cli', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('co_ven', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('fec_cob', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(convert(varchar(10),getdate(),104))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('anulado', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('monto', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('dppago', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('mont_ncr', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('ncr', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('tcomi_porc', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('tcomi_line', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('tcomi_art', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('tcomi_conc', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('feccom', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(\'01/01/1900\')',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('tasa', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('moneda', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('numcom', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('dis_cen', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('campo1', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo2', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo3', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo4', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo5', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo6', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo7', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo8', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('recargo', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('adel_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('revisado', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('trasnfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_sucu', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('descrip', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('num_dev', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('devdinero', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('num_turno', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('aux01', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('aux02', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('origen', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('origen_d', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => false,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Clientes', array(
             'local' => 'co_cli',
             'foreign' => 'co_cli'));

        $this->hasOne('Vendedor', array(
             'local' => 'co_ven',
             'foreign' => 'co_ven'));

        $this->hasOne('Moneda', array(
             'local' => 'moneda',
             'foreign' => 'co_mone'));

        $this->hasOne('Almacen', array(
             'local' => 'co_sucu',
             'foreign' => 'co_alma'));
    }
}