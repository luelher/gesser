<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Spmensual', 'profit');

/**
 * BaseSpmensual
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $co_art
 * @property decimal $cantidad
 * @property decimal $diasinv
 * @property integer $diasprod
 * @property integer $holgura
 * @property string $periodo
 * @property decimal $cantprod
 * @property string $trasnfe
 * @property string $co_us_in
 * @property string $co_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_in
 * @property timestamp $fe_us_mo
 * @property timestamp $fe_us_el
 * @property string $co_sucu
 * @property integer $cod_ced
 * @property decimal $pendpro
 * @property decimal $mesprox
 * @property decimal $stockop
 * @property decimal $stockact
 * 
 * @method string    getCoArt()    Returns the current record's "co_art" value
 * @method decimal   getCantidad() Returns the current record's "cantidad" value
 * @method decimal   getDiasinv()  Returns the current record's "diasinv" value
 * @method integer   getDiasprod() Returns the current record's "diasprod" value
 * @method integer   getHolgura()  Returns the current record's "holgura" value
 * @method string    getPeriodo()  Returns the current record's "periodo" value
 * @method decimal   getCantprod() Returns the current record's "cantprod" value
 * @method string    getTrasnfe()  Returns the current record's "trasnfe" value
 * @method string    getCoUsIn()   Returns the current record's "co_us_in" value
 * @method string    getCoUsMo()   Returns the current record's "co_us_mo" value
 * @method string    getCoUsEl()   Returns the current record's "co_us_el" value
 * @method timestamp getFeUsIn()   Returns the current record's "fe_us_in" value
 * @method timestamp getFeUsMo()   Returns the current record's "fe_us_mo" value
 * @method timestamp getFeUsEl()   Returns the current record's "fe_us_el" value
 * @method string    getCoSucu()   Returns the current record's "co_sucu" value
 * @method integer   getCodCed()   Returns the current record's "cod_ced" value
 * @method decimal   getPendpro()  Returns the current record's "pendpro" value
 * @method decimal   getMesprox()  Returns the current record's "mesprox" value
 * @method decimal   getStockop()  Returns the current record's "stockop" value
 * @method decimal   getStockact() Returns the current record's "stockact" value
 * @method Spmensual setCoArt()    Sets the current record's "co_art" value
 * @method Spmensual setCantidad() Sets the current record's "cantidad" value
 * @method Spmensual setDiasinv()  Sets the current record's "diasinv" value
 * @method Spmensual setDiasprod() Sets the current record's "diasprod" value
 * @method Spmensual setHolgura()  Sets the current record's "holgura" value
 * @method Spmensual setPeriodo()  Sets the current record's "periodo" value
 * @method Spmensual setCantprod() Sets the current record's "cantprod" value
 * @method Spmensual setTrasnfe()  Sets the current record's "trasnfe" value
 * @method Spmensual setCoUsIn()   Sets the current record's "co_us_in" value
 * @method Spmensual setCoUsMo()   Sets the current record's "co_us_mo" value
 * @method Spmensual setCoUsEl()   Sets the current record's "co_us_el" value
 * @method Spmensual setFeUsIn()   Sets the current record's "fe_us_in" value
 * @method Spmensual setFeUsMo()   Sets the current record's "fe_us_mo" value
 * @method Spmensual setFeUsEl()   Sets the current record's "fe_us_el" value
 * @method Spmensual setCoSucu()   Sets the current record's "co_sucu" value
 * @method Spmensual setCodCed()   Sets the current record's "cod_ced" value
 * @method Spmensual setPendpro()  Sets the current record's "pendpro" value
 * @method Spmensual setMesprox()  Sets the current record's "mesprox" value
 * @method Spmensual setStockop()  Sets the current record's "stockop" value
 * @method Spmensual setStockact() Sets the current record's "stockact" value
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSpmensual extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('spmensual');
        $this->hasColumn('co_art', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('cantidad', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('diasinv', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('diasprod', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('holgura', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('periodo', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('cantprod', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('trasnfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_sucu', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('cod_ced', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('pendpro', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('mesprox', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('stockop', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('stockact', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        
    }
}