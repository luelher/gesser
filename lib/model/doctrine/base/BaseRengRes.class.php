<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RengRes', 'profit');

/**
 * BaseRengRes
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $rma_num
 * @property integer $reng_num
 * @property string $tipo
 * @property string $co_art
 * @property float $total_art
 * @property float $stotal_art
 * @property string $co_alma
 * @property string $unidad
 * @property string $des_art
 * @property string $rowguid
 * @property decimal $aux01
 * @property string $aux02
 * @property RmaRes $RmaRes
 * @property Art $Art
 * @property SubAlma $SubAlma
 * 
 * @method integer getRmaNum()     Returns the current record's "rma_num" value
 * @method integer getRengNum()    Returns the current record's "reng_num" value
 * @method string  getTipo()       Returns the current record's "tipo" value
 * @method string  getCoArt()      Returns the current record's "co_art" value
 * @method float   getTotalArt()   Returns the current record's "total_art" value
 * @method float   getStotalArt()  Returns the current record's "stotal_art" value
 * @method string  getCoAlma()     Returns the current record's "co_alma" value
 * @method string  getUnidad()     Returns the current record's "unidad" value
 * @method string  getDesArt()     Returns the current record's "des_art" value
 * @method string  getRowguid()    Returns the current record's "rowguid" value
 * @method decimal getAux01()      Returns the current record's "aux01" value
 * @method string  getAux02()      Returns the current record's "aux02" value
 * @method RmaRes  getRmaRes()     Returns the current record's "RmaRes" value
 * @method Art     getArt()        Returns the current record's "Art" value
 * @method SubAlma getSubAlma()    Returns the current record's "SubAlma" value
 * @method RengRes setRmaNum()     Sets the current record's "rma_num" value
 * @method RengRes setRengNum()    Sets the current record's "reng_num" value
 * @method RengRes setTipo()       Sets the current record's "tipo" value
 * @method RengRes setCoArt()      Sets the current record's "co_art" value
 * @method RengRes setTotalArt()   Sets the current record's "total_art" value
 * @method RengRes setStotalArt()  Sets the current record's "stotal_art" value
 * @method RengRes setCoAlma()     Sets the current record's "co_alma" value
 * @method RengRes setUnidad()     Sets the current record's "unidad" value
 * @method RengRes setDesArt()     Sets the current record's "des_art" value
 * @method RengRes setRowguid()    Sets the current record's "rowguid" value
 * @method RengRes setAux01()      Sets the current record's "aux01" value
 * @method RengRes setAux02()      Sets the current record's "aux02" value
 * @method RengRes setRmaRes()     Sets the current record's "RmaRes" value
 * @method RengRes setArt()        Sets the current record's "Art" value
 * @method RengRes setSubAlma()    Sets the current record's "SubAlma" value
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRengRes extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reng_res');
        $this->hasColumn('rma_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('reng_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('tipo', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('co_art', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('total_art', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('stotal_art', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
        $this->hasColumn('co_alma', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('unidad', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('des_art', 'string', 120, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 120,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('aux01', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('aux02', 'string', 30, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('RmaRes', array(
             'local' => 'rma_num',
             'foreign' => 'rma_num'));

        $this->hasOne('Art', array(
             'local' => 'co_art',
             'foreign' => 'co_art'));

        $this->hasOne('SubAlma', array(
             'local' => 'co_alma',
             'foreign' => 'co_sub'));
    }
}