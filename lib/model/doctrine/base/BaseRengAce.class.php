<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RengAce', 'profit');

/**
 * BaseRengAce
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $co_ced
 * @property integer $reng_num
 * @property string $co_art
 * @property decimal $cant
 * @property string $co_uni
 * @property string $rowguid
 * @property string $dis_cen
 * @property timestamp $feccom
 * @property integer $numcom
 * @property decimal $por_cos
 * @property integer $subced
 * @property decimal $total_uni
 * @property decimal $cant_prod
 * @property Spced $Spced
 * @property Art $Art
 * 
 * @method integer   getCoCed()     Returns the current record's "co_ced" value
 * @method integer   getRengNum()   Returns the current record's "reng_num" value
 * @method string    getCoArt()     Returns the current record's "co_art" value
 * @method decimal   getCant()      Returns the current record's "cant" value
 * @method string    getCoUni()     Returns the current record's "co_uni" value
 * @method string    getRowguid()   Returns the current record's "rowguid" value
 * @method string    getDisCen()    Returns the current record's "dis_cen" value
 * @method timestamp getFeccom()    Returns the current record's "feccom" value
 * @method integer   getNumcom()    Returns the current record's "numcom" value
 * @method decimal   getPorCos()    Returns the current record's "por_cos" value
 * @method integer   getSubced()    Returns the current record's "subced" value
 * @method decimal   getTotalUni()  Returns the current record's "total_uni" value
 * @method decimal   getCantProd()  Returns the current record's "cant_prod" value
 * @method Spced     getSpced()     Returns the current record's "Spced" value
 * @method Art       getArt()       Returns the current record's "Art" value
 * @method RengAce   setCoCed()     Sets the current record's "co_ced" value
 * @method RengAce   setRengNum()   Sets the current record's "reng_num" value
 * @method RengAce   setCoArt()     Sets the current record's "co_art" value
 * @method RengAce   setCant()      Sets the current record's "cant" value
 * @method RengAce   setCoUni()     Sets the current record's "co_uni" value
 * @method RengAce   setRowguid()   Sets the current record's "rowguid" value
 * @method RengAce   setDisCen()    Sets the current record's "dis_cen" value
 * @method RengAce   setFeccom()    Sets the current record's "feccom" value
 * @method RengAce   setNumcom()    Sets the current record's "numcom" value
 * @method RengAce   setPorCos()    Sets the current record's "por_cos" value
 * @method RengAce   setSubced()    Sets the current record's "subced" value
 * @method RengAce   setTotalUni()  Sets the current record's "total_uni" value
 * @method RengAce   setCantProd()  Sets the current record's "cant_prod" value
 * @method RengAce   setSpced()     Sets the current record's "Spced" value
 * @method RengAce   setArt()       Sets the current record's "Art" value
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseRengAce extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('reng_ace');
        $this->hasColumn('co_ced', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('reng_num', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('co_art', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(\' \')',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('cant', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('co_uni', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(\' \')',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('dis_cen', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('feccom', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(convert(varchar(10),getdate(),104))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('numcom', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('por_cos', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('subced', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('total_uni', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('cant_prod', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Spced', array(
             'local' => 'co_ced',
             'foreign' => 'co_ced'));

        $this->hasOne('Art', array(
             'local' => 'co_art',
             'foreign' => 'co_art'));
    }
}