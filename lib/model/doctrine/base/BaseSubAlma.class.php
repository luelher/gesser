<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('SubAlma', 'profit');

/**
 * BaseSubAlma
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $co_sub
 * @property string $des_sub
 * @property string $co_alma
 * @property string $campo1
 * @property string $campo2
 * @property string $campo3
 * @property string $campo4
 * @property string $co_us_in
 * @property timestamp $fe_us_in
 * @property string $co_us_mo
 * @property timestamp $fe_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_el
 * @property string $revisado
 * @property string $trasnfe
 * @property string $co_sucu
 * @property string $rowguid
 * @property boolean $noventa
 * @property boolean $nocompra
 * @property boolean $materiales
 * @property boolean $produccion
 * @property Almacen $Almacen
 * @property Doctrine_Collection $Fisico
 * @property Doctrine_Collection $GeneKit
 * @property Doctrine_Collection $RengAju
 * @property Doctrine_Collection $RengCac
 * @property Doctrine_Collection $RengCdp
 * @property Doctrine_Collection $RengCom
 * @property Doctrine_Collection $RengDvc
 * @property Doctrine_Collection $RengDvp
 * @property Doctrine_Collection $RengEnc
 * @property Doctrine_Collection $RengEnp
 * @property Doctrine_Collection $RengFac
 * @property Doctrine_Collection $RengGen
 * @property Doctrine_Collection $RengNdd
 * @property Doctrine_Collection $RengNde
 * @property Doctrine_Collection $RengNdr
 * @property Doctrine_Collection $RengOrd
 * @property Doctrine_Collection $RengPed
 * @property Doctrine_Collection $RengPlc
 * @property Doctrine_Collection $RengPlv
 * @property Doctrine_Collection $RengRes
 * @property Doctrine_Collection $RengRmc
 * @property Doctrine_Collection $RengRmp
 * @property Doctrine_Collection $Seriales
 * @property Doctrine_Collection $Spcierre
 * @property Doctrine_Collection $Spentre
 * @property Doctrine_Collection $StAlmac
 * @property Doctrine_Collection $StLote
 * @property Doctrine_Collection $TrasAlm
 * @property Doctrine_Collection $TrasAlm_2
 * 
 * @method string              getCoSub()      Returns the current record's "co_sub" value
 * @method string              getDesSub()     Returns the current record's "des_sub" value
 * @method string              getCoAlma()     Returns the current record's "co_alma" value
 * @method string              getCampo1()     Returns the current record's "campo1" value
 * @method string              getCampo2()     Returns the current record's "campo2" value
 * @method string              getCampo3()     Returns the current record's "campo3" value
 * @method string              getCampo4()     Returns the current record's "campo4" value
 * @method string              getCoUsIn()     Returns the current record's "co_us_in" value
 * @method timestamp           getFeUsIn()     Returns the current record's "fe_us_in" value
 * @method string              getCoUsMo()     Returns the current record's "co_us_mo" value
 * @method timestamp           getFeUsMo()     Returns the current record's "fe_us_mo" value
 * @method string              getCoUsEl()     Returns the current record's "co_us_el" value
 * @method timestamp           getFeUsEl()     Returns the current record's "fe_us_el" value
 * @method string              getRevisado()   Returns the current record's "revisado" value
 * @method string              getTrasnfe()    Returns the current record's "trasnfe" value
 * @method string              getCoSucu()     Returns the current record's "co_sucu" value
 * @method string              getRowguid()    Returns the current record's "rowguid" value
 * @method boolean             getNoventa()    Returns the current record's "noventa" value
 * @method boolean             getNocompra()   Returns the current record's "nocompra" value
 * @method boolean             getMateriales() Returns the current record's "materiales" value
 * @method boolean             getProduccion() Returns the current record's "produccion" value
 * @method Almacen             getAlmacen()    Returns the current record's "Almacen" value
 * @method Doctrine_Collection getFisico()     Returns the current record's "Fisico" collection
 * @method Doctrine_Collection getGeneKit()    Returns the current record's "GeneKit" collection
 * @method Doctrine_Collection getRengAju()    Returns the current record's "RengAju" collection
 * @method Doctrine_Collection getRengCac()    Returns the current record's "RengCac" collection
 * @method Doctrine_Collection getRengCdp()    Returns the current record's "RengCdp" collection
 * @method Doctrine_Collection getRengCom()    Returns the current record's "RengCom" collection
 * @method Doctrine_Collection getRengDvc()    Returns the current record's "RengDvc" collection
 * @method Doctrine_Collection getRengDvp()    Returns the current record's "RengDvp" collection
 * @method Doctrine_Collection getRengEnc()    Returns the current record's "RengEnc" collection
 * @method Doctrine_Collection getRengEnp()    Returns the current record's "RengEnp" collection
 * @method Doctrine_Collection getRengFac()    Returns the current record's "RengFac" collection
 * @method Doctrine_Collection getRengGen()    Returns the current record's "RengGen" collection
 * @method Doctrine_Collection getRengNdd()    Returns the current record's "RengNdd" collection
 * @method Doctrine_Collection getRengNde()    Returns the current record's "RengNde" collection
 * @method Doctrine_Collection getRengNdr()    Returns the current record's "RengNdr" collection
 * @method Doctrine_Collection getRengOrd()    Returns the current record's "RengOrd" collection
 * @method Doctrine_Collection getRengPed()    Returns the current record's "RengPed" collection
 * @method Doctrine_Collection getRengPlc()    Returns the current record's "RengPlc" collection
 * @method Doctrine_Collection getRengPlv()    Returns the current record's "RengPlv" collection
 * @method Doctrine_Collection getRengRes()    Returns the current record's "RengRes" collection
 * @method Doctrine_Collection getRengRmc()    Returns the current record's "RengRmc" collection
 * @method Doctrine_Collection getRengRmp()    Returns the current record's "RengRmp" collection
 * @method Doctrine_Collection getSeriales()   Returns the current record's "Seriales" collection
 * @method Doctrine_Collection getSpcierre()   Returns the current record's "Spcierre" collection
 * @method Doctrine_Collection getSpentre()    Returns the current record's "Spentre" collection
 * @method Doctrine_Collection getStAlmac()    Returns the current record's "StAlmac" collection
 * @method Doctrine_Collection getStLote()     Returns the current record's "StLote" collection
 * @method Doctrine_Collection getTrasAlm()    Returns the current record's "TrasAlm" collection
 * @method Doctrine_Collection getTrasAlm2()   Returns the current record's "TrasAlm_2" collection
 * @method SubAlma             setCoSub()      Sets the current record's "co_sub" value
 * @method SubAlma             setDesSub()     Sets the current record's "des_sub" value
 * @method SubAlma             setCoAlma()     Sets the current record's "co_alma" value
 * @method SubAlma             setCampo1()     Sets the current record's "campo1" value
 * @method SubAlma             setCampo2()     Sets the current record's "campo2" value
 * @method SubAlma             setCampo3()     Sets the current record's "campo3" value
 * @method SubAlma             setCampo4()     Sets the current record's "campo4" value
 * @method SubAlma             setCoUsIn()     Sets the current record's "co_us_in" value
 * @method SubAlma             setFeUsIn()     Sets the current record's "fe_us_in" value
 * @method SubAlma             setCoUsMo()     Sets the current record's "co_us_mo" value
 * @method SubAlma             setFeUsMo()     Sets the current record's "fe_us_mo" value
 * @method SubAlma             setCoUsEl()     Sets the current record's "co_us_el" value
 * @method SubAlma             setFeUsEl()     Sets the current record's "fe_us_el" value
 * @method SubAlma             setRevisado()   Sets the current record's "revisado" value
 * @method SubAlma             setTrasnfe()    Sets the current record's "trasnfe" value
 * @method SubAlma             setCoSucu()     Sets the current record's "co_sucu" value
 * @method SubAlma             setRowguid()    Sets the current record's "rowguid" value
 * @method SubAlma             setNoventa()    Sets the current record's "noventa" value
 * @method SubAlma             setNocompra()   Sets the current record's "nocompra" value
 * @method SubAlma             setMateriales() Sets the current record's "materiales" value
 * @method SubAlma             setProduccion() Sets the current record's "produccion" value
 * @method SubAlma             setAlmacen()    Sets the current record's "Almacen" value
 * @method SubAlma             setFisico()     Sets the current record's "Fisico" collection
 * @method SubAlma             setGeneKit()    Sets the current record's "GeneKit" collection
 * @method SubAlma             setRengAju()    Sets the current record's "RengAju" collection
 * @method SubAlma             setRengCac()    Sets the current record's "RengCac" collection
 * @method SubAlma             setRengCdp()    Sets the current record's "RengCdp" collection
 * @method SubAlma             setRengCom()    Sets the current record's "RengCom" collection
 * @method SubAlma             setRengDvc()    Sets the current record's "RengDvc" collection
 * @method SubAlma             setRengDvp()    Sets the current record's "RengDvp" collection
 * @method SubAlma             setRengEnc()    Sets the current record's "RengEnc" collection
 * @method SubAlma             setRengEnp()    Sets the current record's "RengEnp" collection
 * @method SubAlma             setRengFac()    Sets the current record's "RengFac" collection
 * @method SubAlma             setRengGen()    Sets the current record's "RengGen" collection
 * @method SubAlma             setRengNdd()    Sets the current record's "RengNdd" collection
 * @method SubAlma             setRengNde()    Sets the current record's "RengNde" collection
 * @method SubAlma             setRengNdr()    Sets the current record's "RengNdr" collection
 * @method SubAlma             setRengOrd()    Sets the current record's "RengOrd" collection
 * @method SubAlma             setRengPed()    Sets the current record's "RengPed" collection
 * @method SubAlma             setRengPlc()    Sets the current record's "RengPlc" collection
 * @method SubAlma             setRengPlv()    Sets the current record's "RengPlv" collection
 * @method SubAlma             setRengRes()    Sets the current record's "RengRes" collection
 * @method SubAlma             setRengRmc()    Sets the current record's "RengRmc" collection
 * @method SubAlma             setRengRmp()    Sets the current record's "RengRmp" collection
 * @method SubAlma             setSeriales()   Sets the current record's "Seriales" collection
 * @method SubAlma             setSpcierre()   Sets the current record's "Spcierre" collection
 * @method SubAlma             setSpentre()    Sets the current record's "Spentre" collection
 * @method SubAlma             setStAlmac()    Sets the current record's "StAlmac" collection
 * @method SubAlma             setStLote()     Sets the current record's "StLote" collection
 * @method SubAlma             setTrasAlm()    Sets the current record's "TrasAlm" collection
 * @method SubAlma             setTrasAlm2()   Sets the current record's "TrasAlm_2" collection
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis Hernández
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseSubAlma extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('sub_alma');
        $this->hasColumn('co_sub', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('des_sub', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('co_alma', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('campo1', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo2', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo3', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo4', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('revisado', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('trasnfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_sucu', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('noventa', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('nocompra', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('materiales', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('produccion', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Almacen', array(
             'local' => 'co_alma',
             'foreign' => 'co_alma'));

        $this->hasMany('Fisico', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('GeneKit', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengAju', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengCac', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengCdp', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengCom', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengDvc', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengDvp', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengEnc', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengEnp', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengFac', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengGen', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengNdd', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengNde', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengNdr', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengOrd', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengPed', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengPlc', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengPlv', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengRes', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengRmc', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('RengRmp', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('Seriales', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('Spcierre', array(
             'local' => 'co_sub',
             'foreign' => 'co_sub'));

        $this->hasMany('Spentre', array(
             'local' => 'co_sub',
             'foreign' => 'co_sub'));

        $this->hasMany('StAlmac', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('StLote', array(
             'local' => 'co_sub',
             'foreign' => 'co_alma'));

        $this->hasMany('TrasAlm', array(
             'local' => 'co_sub',
             'foreign' => 'alm_orig'));

        $this->hasMany('TrasAlm as TrasAlm_2', array(
             'local' => 'co_sub',
             'foreign' => 'alm_dest'));
    }
}