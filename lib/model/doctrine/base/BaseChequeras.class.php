<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Chequeras', 'profit');

/**
 * BaseChequeras
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $co_chra
 * @property string $chra_des
 * @property string $cod_cta
 * @property timestamp $fecha_re
 * @property integer $num_ch_p
 * @property integer $num_ch_u
 * @property string $respons
 * @property string $campo1
 * @property string $campo2
 * @property string $campo3
 * @property string $campo4
 * @property string $co_us_in
 * @property timestamp $fe_us_in
 * @property string $co_us_mo
 * @property timestamp $fe_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_el
 * @property string $revisado
 * @property string $trasnfe
 * @property string $co_sucu
 * @property string $status
 * @property boolean $limusore
 * @property boolean $ch_gen
 * @property string $rowguid
 * @property Cuentas $Cuentas
 * @property Doctrine_Collection $Cheques
 * 
 * @method string              getCoChra()   Returns the current record's "co_chra" value
 * @method string              getChraDes()  Returns the current record's "chra_des" value
 * @method string              getCodCta()   Returns the current record's "cod_cta" value
 * @method timestamp           getFechaRe()  Returns the current record's "fecha_re" value
 * @method integer             getNumChP()   Returns the current record's "num_ch_p" value
 * @method integer             getNumChU()   Returns the current record's "num_ch_u" value
 * @method string              getRespons()  Returns the current record's "respons" value
 * @method string              getCampo1()   Returns the current record's "campo1" value
 * @method string              getCampo2()   Returns the current record's "campo2" value
 * @method string              getCampo3()   Returns the current record's "campo3" value
 * @method string              getCampo4()   Returns the current record's "campo4" value
 * @method string              getCoUsIn()   Returns the current record's "co_us_in" value
 * @method timestamp           getFeUsIn()   Returns the current record's "fe_us_in" value
 * @method string              getCoUsMo()   Returns the current record's "co_us_mo" value
 * @method timestamp           getFeUsMo()   Returns the current record's "fe_us_mo" value
 * @method string              getCoUsEl()   Returns the current record's "co_us_el" value
 * @method timestamp           getFeUsEl()   Returns the current record's "fe_us_el" value
 * @method string              getRevisado() Returns the current record's "revisado" value
 * @method string              getTrasnfe()  Returns the current record's "trasnfe" value
 * @method string              getCoSucu()   Returns the current record's "co_sucu" value
 * @method string              getStatus()   Returns the current record's "status" value
 * @method boolean             getLimusore() Returns the current record's "limusore" value
 * @method boolean             getChGen()    Returns the current record's "ch_gen" value
 * @method string              getRowguid()  Returns the current record's "rowguid" value
 * @method Cuentas             getCuentas()  Returns the current record's "Cuentas" value
 * @method Doctrine_Collection getCheques()  Returns the current record's "Cheques" collection
 * @method Chequeras           setCoChra()   Sets the current record's "co_chra" value
 * @method Chequeras           setChraDes()  Sets the current record's "chra_des" value
 * @method Chequeras           setCodCta()   Sets the current record's "cod_cta" value
 * @method Chequeras           setFechaRe()  Sets the current record's "fecha_re" value
 * @method Chequeras           setNumChP()   Sets the current record's "num_ch_p" value
 * @method Chequeras           setNumChU()   Sets the current record's "num_ch_u" value
 * @method Chequeras           setRespons()  Sets the current record's "respons" value
 * @method Chequeras           setCampo1()   Sets the current record's "campo1" value
 * @method Chequeras           setCampo2()   Sets the current record's "campo2" value
 * @method Chequeras           setCampo3()   Sets the current record's "campo3" value
 * @method Chequeras           setCampo4()   Sets the current record's "campo4" value
 * @method Chequeras           setCoUsIn()   Sets the current record's "co_us_in" value
 * @method Chequeras           setFeUsIn()   Sets the current record's "fe_us_in" value
 * @method Chequeras           setCoUsMo()   Sets the current record's "co_us_mo" value
 * @method Chequeras           setFeUsMo()   Sets the current record's "fe_us_mo" value
 * @method Chequeras           setCoUsEl()   Sets the current record's "co_us_el" value
 * @method Chequeras           setFeUsEl()   Sets the current record's "fe_us_el" value
 * @method Chequeras           setRevisado() Sets the current record's "revisado" value
 * @method Chequeras           setTrasnfe()  Sets the current record's "trasnfe" value
 * @method Chequeras           setCoSucu()   Sets the current record's "co_sucu" value
 * @method Chequeras           setStatus()   Sets the current record's "status" value
 * @method Chequeras           setLimusore() Sets the current record's "limusore" value
 * @method Chequeras           setChGen()    Sets the current record's "ch_gen" value
 * @method Chequeras           setRowguid()  Sets the current record's "rowguid" value
 * @method Chequeras           setCuentas()  Sets the current record's "Cuentas" value
 * @method Chequeras           setCheques()  Sets the current record's "Cheques" collection
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseChequeras extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('chequeras');
        $this->hasColumn('co_chra', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('chra_des', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('cod_cta', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('fecha_re', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('num_ch_p', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('num_ch_u', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('respons', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('campo1', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo2', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo3', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo4', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('revisado', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('trasnfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_sucu', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('status', 'string', 3, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('limusore', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('ch_gen', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Cuentas', array(
             'local' => 'cod_cta',
             'foreign' => 'cod_cta'));

        $this->hasMany('Cheques', array(
             'local' => 'co_chra',
             'foreign' => 'co_chra'));
    }
}