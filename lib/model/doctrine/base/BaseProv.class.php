<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('Prov', 'profit');

/**
 * BaseProv
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $co_prov
 * @property string $prov_des
 * @property string $co_seg
 * @property string $co_zon
 * @property boolean $inactivo
 * @property string $productos
 * @property string $direc1
 * @property string $direc2
 * @property string $telefonos
 * @property string $fax
 * @property string $respons
 * @property timestamp $fecha_reg
 * @property string $tipo
 * @property integer $com_ult_co
 * @property timestamp $fec_ult_co
 * @property decimal $net_ult_co
 * @property decimal $saldo
 * @property decimal $saldo_ini
 * @property decimal $mont_cre
 * @property integer $plaz_pag
 * @property decimal $desc_ppago
 * @property decimal $desc_glob
 * @property string $tipo_iva
 * @property decimal $iva
 * @property string $rif
 * @property boolean $nacional
 * @property string $dis_cen
 * @property string $nit
 * @property string $email
 * @property string $co_ingr
 * @property string $comentario
 * @property string $campo1
 * @property string $campo2
 * @property string $campo3
 * @property string $campo4
 * @property string $campo5
 * @property string $campo6
 * @property string $campo7
 * @property string $campo8
 * @property string $co_us_in
 * @property timestamp $fe_us_in
 * @property string $co_us_mo
 * @property timestamp $fe_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_el
 * @property string $revisado
 * @property string $trasnfe
 * @property string $co_sucu
 * @property string $rowguid
 * @property boolean $juridico
 * @property float $tipo_adi
 * @property string $matriz
 * @property integer $co_tab
 * @property string $tipo_per
 * @property string $co_pais
 * @property string $ciudad
 * @property string $zip
 * @property string $website
 * @property string $formtype
 * @property string $taxid
 * @property boolean $contribu_e
 * @property float $porc_esp
 * @property Segmento $Segmento
 * @property Zona $Zona
 * @property TipoPro $TipoPro
 * @property CtaIngr $CtaIngr
 * @property Doctrine_Collection $Art
 * @property Doctrine_Collection $Compras
 * @property Doctrine_Collection $CotizP
 * @property Doctrine_Collection $DevPro
 * @property Doctrine_Collection $DocumCp
 * @property Doctrine_Collection $ExpImp
 * @property Doctrine_Collection $NotRec
 * @property Doctrine_Collection $Ordenes
 * @property Doctrine_Collection $Pagos
 * @property Doctrine_Collection $Placom
 * @property Doctrine_Collection $RmaEntp
 * @property Doctrine_Collection $RmaProv
 * 
 * @method string              getCoProv()     Returns the current record's "co_prov" value
 * @method string              getProvDes()    Returns the current record's "prov_des" value
 * @method string              getCoSeg()      Returns the current record's "co_seg" value
 * @method string              getCoZon()      Returns the current record's "co_zon" value
 * @method boolean             getInactivo()   Returns the current record's "inactivo" value
 * @method string              getProductos()  Returns the current record's "productos" value
 * @method string              getDirec1()     Returns the current record's "direc1" value
 * @method string              getDirec2()     Returns the current record's "direc2" value
 * @method string              getTelefonos()  Returns the current record's "telefonos" value
 * @method string              getFax()        Returns the current record's "fax" value
 * @method string              getRespons()    Returns the current record's "respons" value
 * @method timestamp           getFechaReg()   Returns the current record's "fecha_reg" value
 * @method string              getTipo()       Returns the current record's "tipo" value
 * @method integer             getComUltCo()   Returns the current record's "com_ult_co" value
 * @method timestamp           getFecUltCo()   Returns the current record's "fec_ult_co" value
 * @method decimal             getNetUltCo()   Returns the current record's "net_ult_co" value
 * @method decimal             getSaldo()      Returns the current record's "saldo" value
 * @method decimal             getSaldoIni()   Returns the current record's "saldo_ini" value
 * @method decimal             getMontCre()    Returns the current record's "mont_cre" value
 * @method integer             getPlazPag()    Returns the current record's "plaz_pag" value
 * @method decimal             getDescPpago()  Returns the current record's "desc_ppago" value
 * @method decimal             getDescGlob()   Returns the current record's "desc_glob" value
 * @method string              getTipoIva()    Returns the current record's "tipo_iva" value
 * @method decimal             getIva()        Returns the current record's "iva" value
 * @method string              getRif()        Returns the current record's "rif" value
 * @method boolean             getNacional()   Returns the current record's "nacional" value
 * @method string              getDisCen()     Returns the current record's "dis_cen" value
 * @method string              getNit()        Returns the current record's "nit" value
 * @method string              getEmail()      Returns the current record's "email" value
 * @method string              getCoIngr()     Returns the current record's "co_ingr" value
 * @method string              getComentario() Returns the current record's "comentario" value
 * @method string              getCampo1()     Returns the current record's "campo1" value
 * @method string              getCampo2()     Returns the current record's "campo2" value
 * @method string              getCampo3()     Returns the current record's "campo3" value
 * @method string              getCampo4()     Returns the current record's "campo4" value
 * @method string              getCampo5()     Returns the current record's "campo5" value
 * @method string              getCampo6()     Returns the current record's "campo6" value
 * @method string              getCampo7()     Returns the current record's "campo7" value
 * @method string              getCampo8()     Returns the current record's "campo8" value
 * @method string              getCoUsIn()     Returns the current record's "co_us_in" value
 * @method timestamp           getFeUsIn()     Returns the current record's "fe_us_in" value
 * @method string              getCoUsMo()     Returns the current record's "co_us_mo" value
 * @method timestamp           getFeUsMo()     Returns the current record's "fe_us_mo" value
 * @method string              getCoUsEl()     Returns the current record's "co_us_el" value
 * @method timestamp           getFeUsEl()     Returns the current record's "fe_us_el" value
 * @method string              getRevisado()   Returns the current record's "revisado" value
 * @method string              getTrasnfe()    Returns the current record's "trasnfe" value
 * @method string              getCoSucu()     Returns the current record's "co_sucu" value
 * @method string              getRowguid()    Returns the current record's "rowguid" value
 * @method boolean             getJuridico()   Returns the current record's "juridico" value
 * @method float               getTipoAdi()    Returns the current record's "tipo_adi" value
 * @method string              getMatriz()     Returns the current record's "matriz" value
 * @method integer             getCoTab()      Returns the current record's "co_tab" value
 * @method string              getTipoPer()    Returns the current record's "tipo_per" value
 * @method string              getCoPais()     Returns the current record's "co_pais" value
 * @method string              getCiudad()     Returns the current record's "ciudad" value
 * @method string              getZip()        Returns the current record's "zip" value
 * @method string              getWebsite()    Returns the current record's "website" value
 * @method string              getFormtype()   Returns the current record's "formtype" value
 * @method string              getTaxid()      Returns the current record's "taxid" value
 * @method boolean             getContribuE()  Returns the current record's "contribu_e" value
 * @method float               getPorcEsp()    Returns the current record's "porc_esp" value
 * @method Segmento            getSegmento()   Returns the current record's "Segmento" value
 * @method Zona                getZona()       Returns the current record's "Zona" value
 * @method TipoPro             getTipoPro()    Returns the current record's "TipoPro" value
 * @method CtaIngr             getCtaIngr()    Returns the current record's "CtaIngr" value
 * @method Doctrine_Collection getArt()        Returns the current record's "Art" collection
 * @method Doctrine_Collection getCompras()    Returns the current record's "Compras" collection
 * @method Doctrine_Collection getCotizP()     Returns the current record's "CotizP" collection
 * @method Doctrine_Collection getDevPro()     Returns the current record's "DevPro" collection
 * @method Doctrine_Collection getDocumCp()    Returns the current record's "DocumCp" collection
 * @method Doctrine_Collection getExpImp()     Returns the current record's "ExpImp" collection
 * @method Doctrine_Collection getNotRec()     Returns the current record's "NotRec" collection
 * @method Doctrine_Collection getOrdenes()    Returns the current record's "Ordenes" collection
 * @method Doctrine_Collection getPagos()      Returns the current record's "Pagos" collection
 * @method Doctrine_Collection getPlacom()     Returns the current record's "Placom" collection
 * @method Doctrine_Collection getRmaEntp()    Returns the current record's "RmaEntp" collection
 * @method Doctrine_Collection getRmaProv()    Returns the current record's "RmaProv" collection
 * @method Prov                setCoProv()     Sets the current record's "co_prov" value
 * @method Prov                setProvDes()    Sets the current record's "prov_des" value
 * @method Prov                setCoSeg()      Sets the current record's "co_seg" value
 * @method Prov                setCoZon()      Sets the current record's "co_zon" value
 * @method Prov                setInactivo()   Sets the current record's "inactivo" value
 * @method Prov                setProductos()  Sets the current record's "productos" value
 * @method Prov                setDirec1()     Sets the current record's "direc1" value
 * @method Prov                setDirec2()     Sets the current record's "direc2" value
 * @method Prov                setTelefonos()  Sets the current record's "telefonos" value
 * @method Prov                setFax()        Sets the current record's "fax" value
 * @method Prov                setRespons()    Sets the current record's "respons" value
 * @method Prov                setFechaReg()   Sets the current record's "fecha_reg" value
 * @method Prov                setTipo()       Sets the current record's "tipo" value
 * @method Prov                setComUltCo()   Sets the current record's "com_ult_co" value
 * @method Prov                setFecUltCo()   Sets the current record's "fec_ult_co" value
 * @method Prov                setNetUltCo()   Sets the current record's "net_ult_co" value
 * @method Prov                setSaldo()      Sets the current record's "saldo" value
 * @method Prov                setSaldoIni()   Sets the current record's "saldo_ini" value
 * @method Prov                setMontCre()    Sets the current record's "mont_cre" value
 * @method Prov                setPlazPag()    Sets the current record's "plaz_pag" value
 * @method Prov                setDescPpago()  Sets the current record's "desc_ppago" value
 * @method Prov                setDescGlob()   Sets the current record's "desc_glob" value
 * @method Prov                setTipoIva()    Sets the current record's "tipo_iva" value
 * @method Prov                setIva()        Sets the current record's "iva" value
 * @method Prov                setRif()        Sets the current record's "rif" value
 * @method Prov                setNacional()   Sets the current record's "nacional" value
 * @method Prov                setDisCen()     Sets the current record's "dis_cen" value
 * @method Prov                setNit()        Sets the current record's "nit" value
 * @method Prov                setEmail()      Sets the current record's "email" value
 * @method Prov                setCoIngr()     Sets the current record's "co_ingr" value
 * @method Prov                setComentario() Sets the current record's "comentario" value
 * @method Prov                setCampo1()     Sets the current record's "campo1" value
 * @method Prov                setCampo2()     Sets the current record's "campo2" value
 * @method Prov                setCampo3()     Sets the current record's "campo3" value
 * @method Prov                setCampo4()     Sets the current record's "campo4" value
 * @method Prov                setCampo5()     Sets the current record's "campo5" value
 * @method Prov                setCampo6()     Sets the current record's "campo6" value
 * @method Prov                setCampo7()     Sets the current record's "campo7" value
 * @method Prov                setCampo8()     Sets the current record's "campo8" value
 * @method Prov                setCoUsIn()     Sets the current record's "co_us_in" value
 * @method Prov                setFeUsIn()     Sets the current record's "fe_us_in" value
 * @method Prov                setCoUsMo()     Sets the current record's "co_us_mo" value
 * @method Prov                setFeUsMo()     Sets the current record's "fe_us_mo" value
 * @method Prov                setCoUsEl()     Sets the current record's "co_us_el" value
 * @method Prov                setFeUsEl()     Sets the current record's "fe_us_el" value
 * @method Prov                setRevisado()   Sets the current record's "revisado" value
 * @method Prov                setTrasnfe()    Sets the current record's "trasnfe" value
 * @method Prov                setCoSucu()     Sets the current record's "co_sucu" value
 * @method Prov                setRowguid()    Sets the current record's "rowguid" value
 * @method Prov                setJuridico()   Sets the current record's "juridico" value
 * @method Prov                setTipoAdi()    Sets the current record's "tipo_adi" value
 * @method Prov                setMatriz()     Sets the current record's "matriz" value
 * @method Prov                setCoTab()      Sets the current record's "co_tab" value
 * @method Prov                setTipoPer()    Sets the current record's "tipo_per" value
 * @method Prov                setCoPais()     Sets the current record's "co_pais" value
 * @method Prov                setCiudad()     Sets the current record's "ciudad" value
 * @method Prov                setZip()        Sets the current record's "zip" value
 * @method Prov                setWebsite()    Sets the current record's "website" value
 * @method Prov                setFormtype()   Sets the current record's "formtype" value
 * @method Prov                setTaxid()      Sets the current record's "taxid" value
 * @method Prov                setContribuE()  Sets the current record's "contribu_e" value
 * @method Prov                setPorcEsp()    Sets the current record's "porc_esp" value
 * @method Prov                setSegmento()   Sets the current record's "Segmento" value
 * @method Prov                setZona()       Sets the current record's "Zona" value
 * @method Prov                setTipoPro()    Sets the current record's "TipoPro" value
 * @method Prov                setCtaIngr()    Sets the current record's "CtaIngr" value
 * @method Prov                setArt()        Sets the current record's "Art" collection
 * @method Prov                setCompras()    Sets the current record's "Compras" collection
 * @method Prov                setCotizP()     Sets the current record's "CotizP" collection
 * @method Prov                setDevPro()     Sets the current record's "DevPro" collection
 * @method Prov                setDocumCp()    Sets the current record's "DocumCp" collection
 * @method Prov                setExpImp()     Sets the current record's "ExpImp" collection
 * @method Prov                setNotRec()     Sets the current record's "NotRec" collection
 * @method Prov                setOrdenes()    Sets the current record's "Ordenes" collection
 * @method Prov                setPagos()      Sets the current record's "Pagos" collection
 * @method Prov                setPlacom()     Sets the current record's "Placom" collection
 * @method Prov                setRmaEntp()    Sets the current record's "RmaEntp" collection
 * @method Prov                setRmaProv()    Sets the current record's "RmaProv" collection
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis Hernández
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProv extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('prov');
        $this->hasColumn('co_prov', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('prov_des', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('co_seg', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('co_zon', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('inactivo', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('productos', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('direc1', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('direc2', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('telefonos', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('fax', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('respons', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('fecha_reg', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(convert(varchar(10),getdate(),104))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('tipo', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('com_ult_co', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fec_ult_co', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(convert(varchar(10),getdate(),104))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('net_ult_co', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('saldo', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('saldo_ini', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('mont_cre', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('plaz_pag', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('desc_ppago', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('desc_glob', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('tipo_iva', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('iva', 'decimal', 20, array(
             'type' => 'decimal',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('rif', 'string', 18, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('nacional', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('dis_cen', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('nit', 'string', 18, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 18,
             ));
        $this->hasColumn('email', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('co_ingr', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('comentario', 'string', 2147483647, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 2147483647,
             ));
        $this->hasColumn('campo1', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo2', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo3', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo4', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo5', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo6', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo7', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo8', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('revisado', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('trasnfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_sucu', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('juridico', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('tipo_adi', 'float', 3, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(1)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 3,
             ));
        $this->hasColumn('matriz', 'string', 10, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(0))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('co_tab', 'integer', 4, array(
             'type' => 'integer',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('tipo_per', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_pais', 'string', 6, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('ciudad', 'string', 50, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 50,
             ));
        $this->hasColumn('zip', 'string', 10, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 10,
             ));
        $this->hasColumn('website', 'string', 200, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 200,
             ));
        $this->hasColumn('formtype', 'string', 30, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 30,
             ));
        $this->hasColumn('taxid', 'string', 20, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 20,
             ));
        $this->hasColumn('contribu_e', 'boolean', 1, array(
             'type' => 'boolean',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('porc_esp', 'float', 8, array(
             'type' => 'float',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(0)',
             'primary' => false,
             'autoincrement' => false,
             'length' => 8,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Segmento', array(
             'local' => 'co_seg',
             'foreign' => 'co_seg'));

        $this->hasOne('Zona', array(
             'local' => 'co_zon',
             'foreign' => 'co_zon'));

        $this->hasOne('TipoPro', array(
             'local' => 'tipo',
             'foreign' => 'tip_pro'));

        $this->hasOne('CtaIngr', array(
             'local' => 'co_ingr',
             'foreign' => 'co_ingr'));

        $this->hasMany('Art', array(
             'local' => 'co_prov',
             'foreign' => 'co_prov'));

        $this->hasMany('Compras', array(
             'local' => 'co_prov',
             'foreign' => 'co_cli'));

        $this->hasMany('CotizP', array(
             'local' => 'co_prov',
             'foreign' => 'co_cli'));

        $this->hasMany('DevPro', array(
             'local' => 'co_prov',
             'foreign' => 'co_cli'));

        $this->hasMany('DocumCp', array(
             'local' => 'co_prov',
             'foreign' => 'co_cli'));

        $this->hasMany('ExpImp', array(
             'local' => 'co_prov',
             'foreign' => 'co_age'));

        $this->hasMany('NotRec', array(
             'local' => 'co_prov',
             'foreign' => 'co_cli'));

        $this->hasMany('Ordenes', array(
             'local' => 'co_prov',
             'foreign' => 'co_cli'));

        $this->hasMany('Pagos', array(
             'local' => 'co_prov',
             'foreign' => 'co_cli'));

        $this->hasMany('Placom', array(
             'local' => 'co_prov',
             'foreign' => 'co_cli'));

        $this->hasMany('RmaEntp', array(
             'local' => 'co_prov',
             'foreign' => 'co_prov'));

        $this->hasMany('RmaProv', array(
             'local' => 'co_prov',
             'foreign' => 'co_prov'));
    }
}