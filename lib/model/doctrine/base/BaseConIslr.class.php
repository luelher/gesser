<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ConIslr', 'profit');

/**
 * BaseConIslr
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property string $co_islr
 * @property string $islr_des
 * @property string $campo1
 * @property string $campo2
 * @property string $campo3
 * @property string $campo4
 * @property string $co_us_in
 * @property timestamp $fe_us_in
 * @property string $co_us_mo
 * @property timestamp $fe_us_mo
 * @property string $co_us_el
 * @property timestamp $fe_us_el
 * @property string $revisado
 * @property string $trasnfe
 * @property string $co_sucu
 * @property string $rowguid
 * @property string $numeral
 * @property string $literal
 * @property Doctrine_Collection $RengIsl
 * @property Doctrine_Collection $RengTab
 * 
 * @method string              getCoIslr()   Returns the current record's "co_islr" value
 * @method string              getIslrDes()  Returns the current record's "islr_des" value
 * @method string              getCampo1()   Returns the current record's "campo1" value
 * @method string              getCampo2()   Returns the current record's "campo2" value
 * @method string              getCampo3()   Returns the current record's "campo3" value
 * @method string              getCampo4()   Returns the current record's "campo4" value
 * @method string              getCoUsIn()   Returns the current record's "co_us_in" value
 * @method timestamp           getFeUsIn()   Returns the current record's "fe_us_in" value
 * @method string              getCoUsMo()   Returns the current record's "co_us_mo" value
 * @method timestamp           getFeUsMo()   Returns the current record's "fe_us_mo" value
 * @method string              getCoUsEl()   Returns the current record's "co_us_el" value
 * @method timestamp           getFeUsEl()   Returns the current record's "fe_us_el" value
 * @method string              getRevisado() Returns the current record's "revisado" value
 * @method string              getTrasnfe()  Returns the current record's "trasnfe" value
 * @method string              getCoSucu()   Returns the current record's "co_sucu" value
 * @method string              getRowguid()  Returns the current record's "rowguid" value
 * @method string              getNumeral()  Returns the current record's "numeral" value
 * @method string              getLiteral()  Returns the current record's "literal" value
 * @method Doctrine_Collection getRengIsl()  Returns the current record's "RengIsl" collection
 * @method Doctrine_Collection getRengTab()  Returns the current record's "RengTab" collection
 * @method ConIslr             setCoIslr()   Sets the current record's "co_islr" value
 * @method ConIslr             setIslrDes()  Sets the current record's "islr_des" value
 * @method ConIslr             setCampo1()   Sets the current record's "campo1" value
 * @method ConIslr             setCampo2()   Sets the current record's "campo2" value
 * @method ConIslr             setCampo3()   Sets the current record's "campo3" value
 * @method ConIslr             setCampo4()   Sets the current record's "campo4" value
 * @method ConIslr             setCoUsIn()   Sets the current record's "co_us_in" value
 * @method ConIslr             setFeUsIn()   Sets the current record's "fe_us_in" value
 * @method ConIslr             setCoUsMo()   Sets the current record's "co_us_mo" value
 * @method ConIslr             setFeUsMo()   Sets the current record's "fe_us_mo" value
 * @method ConIslr             setCoUsEl()   Sets the current record's "co_us_el" value
 * @method ConIslr             setFeUsEl()   Sets the current record's "fe_us_el" value
 * @method ConIslr             setRevisado() Sets the current record's "revisado" value
 * @method ConIslr             setTrasnfe()  Sets the current record's "trasnfe" value
 * @method ConIslr             setCoSucu()   Sets the current record's "co_sucu" value
 * @method ConIslr             setRowguid()  Sets the current record's "rowguid" value
 * @method ConIslr             setNumeral()  Sets the current record's "numeral" value
 * @method ConIslr             setLiteral()  Sets the current record's "literal" value
 * @method ConIslr             setRengIsl()  Sets the current record's "RengIsl" collection
 * @method ConIslr             setRengTab()  Sets the current record's "RengTab" collection
 * 
 * @package    gesser
 * @subpackage model
 * @author     Luis HernÃ¡ndez
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseConIslr extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('con_islr');
        $this->hasColumn('co_islr', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('islr_des', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo1', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo2', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo3', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('campo4', 'string', 60, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 60,
             ));
        $this->hasColumn('co_us_in', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_in', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_mo', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_mo', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('co_us_el', 'string', 4, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 4,
             ));
        $this->hasColumn('fe_us_el', 'timestamp', 16, array(
             'type' => 'timestamp',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(dateadd(millisecond,(((-datepart(millisecond,getdate())))),getdate()))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 16,
             ));
        $this->hasColumn('revisado', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('trasnfe', 'string', 1, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 1,
             ));
        $this->hasColumn('co_sucu', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('rowguid', 'string', 36, array(
             'type' => 'string',
             'fixed' => 0,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(newid())',
             'primary' => false,
             'autoincrement' => false,
             'length' => 36,
             ));
        $this->hasColumn('numeral', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
        $this->hasColumn('literal', 'string', 6, array(
             'type' => 'string',
             'fixed' => 1,
             'unsigned' => false,
             'notnull' => true,
             'default' => '(space(1))',
             'primary' => false,
             'autoincrement' => false,
             'length' => 6,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('RengIsl', array(
             'local' => 'co_islr',
             'foreign' => 'co_islr'));

        $this->hasMany('RengTab', array(
             'local' => 'co_islr',
             'foreign' => 'co_islr'));
    }
}